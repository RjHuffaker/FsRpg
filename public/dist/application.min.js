"use strict";var ApplicationConfiguration=function(){var applicationModuleName="fsrpg",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("cards"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("npcs"),ApplicationConfiguration.registerModule("pcs"),ApplicationConfiguration.registerModule("users"),angular.module("cards").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Cards","cards","/cards")}]),angular.module("cards").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCards",{url:"/cards",templateUrl:"modules/cards/views/list-cards.client.view.html"}).state("createCard",{url:"/cards/create",templateUrl:"modules/cards/views/create-card.client.view.html"}).state("viewCard",{url:"/cards/:cardId",templateUrl:"modules/cards/views/view-card.client.view.html"}).state("editCard",{url:"/cards/:cardId/edit",templateUrl:"modules/cards/views/edit-card.client.view.html"})}]),angular.module("cards").controller("CardsCtrl",["$scope","$location","$log","DataSRVC","Cards","CardsDeck",function($scope,$location,$log,DataSRVC,Cards,CardsDeck){$scope.dataSRVC=DataSRVC,$scope.cards=Cards,$scope.cardsDeck=CardsDeck;var moveHorizontal=function(){console.log("moveHorizontal")},moveDiagonalUp=function(){console.log("moveDiagonalUp")},moveDiagonalDown=function(){console.log("moveDiagonalDown")},moveVertical=function(){console.log("moveVertical")},unstackLeft=function(){console.log("unstackLeft")},unstackRight=function(){console.log("unstackRight")},toggleOverlap=function(){console.log("toggleOverlap")},onReleaseCard=function(){console.log("onReleaseCard")};$scope.$on("cardSlot:moveHorizontal",moveHorizontal),$scope.$on("cardSlot:moveDiagonalUp",moveDiagonalUp),$scope.$on("cardSlot:moveDiagonalDown",moveDiagonalDown),$scope.$on("cardSlot:moveVertical",moveVertical),$scope.$on("cardDeck:unstackLeft",unstackLeft),$scope.$on("cardDeck:unstackRight",unstackRight),$scope.$on("cardPanel:toggleOverlap",toggleOverlap),$scope.$on("cardPanel:onReleaseCard",onReleaseCard)}]);var cardsModule=angular.module("cards");cardsModule.directive("cardPanel",["$document","$parse","$rootScope",function($document,$parse,$rootScope){return{restrict:"A",link:function(scope,element,attrs){var _startX,_startY,_mouseX,_mouseY,_moveX,_moveY,_panelX,_panelY,_startCol,_mouseCol,_panelCol,_startRow,_mouseRow,_panelRow,_stacked=!1,_panel=$parse(attrs.card)||null;console.log(document.documentElement);var _hasTouch="ontouchstart"in document.documentElement,_pressEvents="touchstart mousedown",_moveEvents="touchmove mousemove",_releaseEvents="touchend mouseup",_pressTimer=null,initialize=function(){element.attr("draggable","false"),toggleListeners(!0)},toggleListeners=function(enable){enable&&(scope.$watch(attrs.card,onCardChange),scope.$on("$destroy",onDestroy),scope.$on("cardPanel:onPressCard",onPressCard),scope.$on("cardPanel:onMoveCard",onMoveCard),scope.$on("cardPanel:onReleaseCard",onReleaseCard),scope.$on("cardDeck:onMouseLeave",onMouseLeave),element.on(_pressEvents,onPress),_hasTouch||(console.log("No touchy!"),element.on("mousedown",function(){return!1})))},onDestroy=function(){toggleListeners(!1)},onCardChange=function(newVal){_panel=newVal};element.css({cursor:"move"});var onPress=function(event){$document.off(_pressEvents,onPress),_hasTouch?(console.log("Yes touchy!"),console.log(event),cancelPress(),_pressTimer=setTimeout(function(){cancelPress(),onLongPress(event)},100),$document.on(_moveEvents,cancelPress),$document.on(_releaseEvents,cancelPress)):_hasTouch||onLongPress(event)},cancelPress=function(){clearTimeout(_pressTimer),$document.off(_moveEvents,cancelPress),$document.off(_releaseEvents,cancelPress)},onLongPress=function(event){event.preventDefault(),_startX=event.pageX||event.originalEvent.touches[0].pageX,_startY=event.pageY||event.originalEvent.touches[0].pageY,_moveX=0,_moveY=0,_startCol=_panel.x_coord,_startRow=_panel.y_coord,$document.on(_moveEvents,onMove),$document.on(_releaseEvents,onRelease),$rootScope.$broadcast("cardPanel:onPressCard",{startX:_startX,startY:_startY,panel:_panel})},onPressCard=function(event,object){_panel.x_index===object.panel.x_index&&(_panel.y_index===object.panel.y_index?(element.addClass("dragging"),element.parent().addClass("dragging"),_stacked=!1):object.panel.y_overlap&&_panel.y_index>=object.panel.y_index&&(element.addClass("dragging"),element.parent().addClass("dragging"),_stacked=!0))},onMove=function(event){_mouseX=event.pageX||event.originalEvent.touches[0].pageX,_mouseY=event.pageY||event.originalEvent.touches[0].pageY,_mouseCol=_panel.x_coord,_mouseRow=_panel.y_coord,_panelCol=_mouseCol-_startCol,_panelRow=_mouseRow-_startRow,_moveX=_mouseX-_startX,_moveY=_mouseY-_startY,_panelX=_moveX-_panelCol,_panelY=_moveY-_panelRow,$rootScope.$broadcast("cardPanel:onMoveCard",{mouseX:_mouseX,mouseY:_mouseY,moveX:_moveX,moveY:_moveY,panelX:_panelX,panelY:_panelY,panel:_panel})},onMoveCard=function(event,object){_panel.x_index===object.panel.x_index&&(_panel.y_index===object.panel.y_index?element.css({left:object.panelX+"px",top:object.panelY+"px"}):_stacked&&_panel.y_index>object.panel.y_index&&element.css({left:object.panelX+"px",top:object.panelY+"px"}))},onRelease=function(){event.preventDefault(),$document.off(_moveEvents,onMove),$document.off(_releaseEvents,onRelease),15>=_moveX&&_moveX>=-15&&15>=_moveY&&_moveY>=-15&&$rootScope.$broadcast("cardPanel:toggleOverlap",{panel:_panel}),$rootScope.$broadcast("cardPanel:onReleaseCard",{panel:_panel}),_stacked=!1},onMouseLeave=function(){event.preventDefault(),$document.off(_moveEvents,onMove),$document.off(_releaseEvents,onRelease),$rootScope.$broadcast("cardPanel:onReleaseCard",{panel:_panel})},onReleaseCard=function(){element.removeClass("dragging"),element.parent().removeClass("dragging"),element.css({left:"0px",top:"0px"}),_stacked=!1};initialize()}}}]).directive("cardSlot",["$document","$parse","$rootScope",function($document,$parse,$rootScope){return{restrict:"A",link:function(scope,element,attrs){var _offset,leftEdge,rightEdge,topEdge,bottomEdge,_slot=$parse(attrs.card)||null,_panel={},initialize=function(){toggleListeners(),_offset=element.offset()},toggleListeners=function(){scope.$watch(attrs.card,onCardChange),scope.$on("cardPanel:onPressCard",onPressCard),scope.$on("cardPanel:onMoveCard",onMoveCard),scope.$on("cardPanel:onReleaseCard",onReleaseCard)},onCardChange=function(newVal){_slot=newVal},onPressCard=function(event,object){_panel=object.panel},onMoveCard=function(event,object){if(isTouching(object.mouseX,object.mouseY)){var moveX=Math.abs(object.moveX),moveY=Math.abs(object.moveY);_slot.x_index!==_panel.x_index?2*moveY>moveX?object.moveY<0&&!_slot.x_overlap?$rootScope.$broadcast("cardSlot:moveDiagonalUp",{slot:_slot,panel:_panel}):object.moveY>0&&!_slot.x_overlap&&$rootScope.$broadcast("cardSlot:moveDiagonalDown",{slot:_slot,panel:_panel}):moveX>moveY&&$rootScope.$broadcast("cardSlot:moveHorizontal",{slot:_slot,panel:_panel}):_slot.x_index===_panel.x_index&&_slot.y_index!==_panel.y_index&&moveY>2*moveX&&!object.panel.y_overlap&&$rootScope.$broadcast("cardSlot:moveVertical",{slot:_slot,panel:_panel})}else isAbove(object.mouseX,object.mouseY)?0===_slot.y_index&&_slot.x_index!==_panel.x_index&&$rootScope.$broadcast("cardSlot:moveDiagonalUp",{slot:_slot,panel:_panel}):isBelow(object.mouseX,object.mouseY)&&0!==_panel.y_index&&_slot.x_index!==_panel.x_index&&$rootScope.$broadcast("cardSlot:moveDiagonalDown",{slot:_slot,panel:_panel})},onReleaseCard=function(){_panel={}},isAbove=function(mouseX,mouseY){return _offset=element.offset(),leftEdge=_offset.left,rightEdge=leftEdge+250,topEdge=_offset.top,mouseX>=leftEdge&&rightEdge>=mouseX&&topEdge>=mouseY},isBelow=function(mouseX,mouseY){return _offset=element.offset(),leftEdge=_offset.left,rightEdge=_offset.left+250,bottomEdge=_offset.top+350,mouseX>=leftEdge&&rightEdge>=mouseX&&mouseY>=bottomEdge},isTouching=function(mouseX,mouseY){return _offset=element.offset(),leftEdge=_offset.left,rightEdge=_offset.left+250,topEdge=_offset.top,bottomEdge=_offset.top+350,_slot.x_overlap&&(leftEdge=_offset.left+225),_slot.y_overlap&&(bottomEdge=_offset.top+50),mouseX>=leftEdge&&rightEdge>=mouseX&&mouseY>=topEdge&&bottomEdge>=mouseY};initialize()}}}]).directive("cardDeck",["$document","$parse","$rootScope",function($document,$parse,$rootScope){return{restrict:"A",link:function(scope,element){var pressed=!1,initialize=function(){element.on("mouseleave",onMouseLeave),scope.$on("cardPanel:onPressCard",onPress),scope.$on("cardPanel:onPressStack",onPress),scope.$on("cardPanel:onReleaseCard",onRelease),scope.$on("cardPanel:onMoveCard",onMoveCard),scope.$on("cardPanel:onMoveStack",onMoveCard)},onPress=function(){pressed=!0},onRelease=function(){pressed=!1},onMoveCard=function(event,object){var _offset=element.offset(),_width=element[0].offsetWidth,leftEdge=_offset.left,rightEdge=leftEdge+_width-25;object.mouseX<=leftEdge?$rootScope.$broadcast("cardDeck:unstackLeft",{panel:object.panel}):object.mouseX>=rightEdge&&$rootScope.$broadcast("cardDeck:unstackRight",{panel:object.panel})},onMouseLeave=function(){pressed&&$rootScope.$broadcast("cardDeck:onMouseLeave")};initialize()}}}]);var cardsModule=angular.module("cards");cardsModule.directive("cardFeature",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-feature.html"}}).directive("cardLogo",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-logo.html"}}).directive("cardHeader",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-header.html"}}).directive("cardDescription",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-description.html"}}).directive("cardModifiers",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-modifiers.html"}}).directive("cardBenefit",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-benefit.html"}}).directive("cardFooter",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-footer.html"}}).directive("cardAction",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action.html",scope:{cardAction:"="}}}).directive("cardActionTitle",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-title.html"}}).directive("cardActionKeywords",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-keywords.html"}}).directive("cardActionPrompt",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-prompt.html"}}).directive("cardActionEffect",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-effect.html"}}).directive("cardActionAttack",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-attack.html"}}).directive("cardActionDefense",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-defense.html"}}).directive("elasticTextarea",["$timeout",function(){return{restrict:"A",link:function(scope,element){var resizeArea=function(){setTimeout(function(){element[0].style.height=element[0].scrollHeight+"px"},25)};scope.$watch(function(){return element[0].scrollHeight},function(newValue,oldValue){newValue!==oldValue&&resizeArea()}),resizeArea()}}}]).directive("fitContent",function(){return{restrict:"A",link:function(scope,element){var reduceText=function(){setTimeout(function(){var fontSize=parseInt(element.css("font-size"));for(console.log("Measure: "+element[0].offsetHeight+" / "+fontSize);element[0].offsetHeight>element.parent()[0].offsetHeight&&fontSize>=8;)fontSize--,element.css("font-size",fontSize+"px"),console.log("Reducing: "+element[0].offsetHeight+" / "+parseInt(element.css("font-size")))},25)};scope.$watch(function(){return element[0].offsetHeight},function(newValue,oldValue){newValue>oldValue&&reduceText()}),element.css("font-size","13px"),reduceText()}}});var cardsModule=angular.module("cards");cardsModule.directive("cardLayout",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-layout.html"}}).directive("cardPc1",function(){return{restrict:"A",templateUrl:"../modules/pcs/views/card-pc-1.html"}}).directive("cardPc2",function(){return{restrict:"A",templateUrl:"../modules/pcs/views/card-pc-2.html"}}).directive("cardPc3",function(){return{restrict:"A",templateUrl:"../modules/pcs/views/card-pc-3.html"}}).directive("stopEvent",function(){return{restrict:"A",link:function(scope,element){element.bind("mousedown",function(e){e.stopPropagation()})}}}).directive("stopClick",function(){return{restrict:"A",link:function(scope,element){element.bind("click",function(e){e.stopPropagation()})}}});var cardsModule=angular.module("cards");cardsModule.factory("CardsDeck",["Cards",function(Cards){function cardByIndex(index){for(var i=0;i<Cards.cardList.length;i++){var card=Cards.cardList[i];if(card.index===index)return i}}var service={};return service.shiftLeft=function(index){if(index>0){var _old=cardByIndex(index),_new=cardByIndex(index-1);Cards.cardList[_new].column+=Cards.cardList[_old].overlap?25:250,Cards.cardList[_old].column-=Cards.cardList[_new].overlap?25:250,Cards.cardList[_old].index=index-1,Cards.cardList[_new].index=index}Cards.cardList[cardByIndex(0)].overlap&&service.toggleOverlap(0)},service.shiftRight=function(index){if(index<Cards.cardList.length-1){var _old=cardByIndex(index),_new=cardByIndex(index+1);Cards.cardList[_new].column-=Cards.cardList[_old].overlap?25:250,Cards.cardList[_old].column+=Cards.cardList[_new].overlap?25:250,Cards.cardList[_old].index=index+1,Cards.cardList[_new].index=index}Cards.cardList[cardByIndex(0)].overlap&&service.toggleOverlap(0)},service.toggleOverlap=function(index){var _card=cardByIndex(index);if(Cards.cardList[_card].overlap){for(var index1=0;index1<Cards.cardList.length;index1++)Cards.cardList[index1].index>index-1&&(Cards.cardList[index1].column+=225);Cards.cardList[_card].overlap=!1}else{for(var index2=0;index2<Cards.cardList.length;index2++)Cards.cardList[index2].index>index-1&&(Cards.cardList[index2].column-=225);Cards.cardList[_card].overlap=!0}},service}]);var cardsModule=angular.module("cards");cardsModule.factory("Cards",["$stateParams","$location","Authentication","$resource",function($stateParams,$location,Authentication,$resource){var Traits=$resource("traits/:traitId",{traitId:"@_id"},{update:{method:"PUT"}}),Feats=$resource("feats/:featId",{featId:"@_id"},{update:{method:"PUT"}}),Augments=$resource("augments/:augmentId",{augmentId:"@_id"},{update:{method:"PUT"}}),Items=$resource("items/:itemId",{itemId:"@_id"},{update:{method:"PUT"}}),service={};return service.card={},service.cardList=[],service.cardType=0,service.cardNew=!1,service.cardSaved=!1,service.lockCard=function(card){card.locked=!0,card.x_index=card.cardNumber-1,card.y_index=0,card.x_coord=250*card.x_index,card.y_coord=0},service.unlockCard=function(card){card.locked=!1,card.x_index=card.cardNumber-1,card.y_index=0,card.x_coord=250*card.x_index,card.y_coord=0},service.setCardList=function(){for(var i=0;i<service.cardList.length;i++)service.lockCard(service.cardList[i])},service.changeDurability=function(card,add){add&&card.durability.modifier<4?card.durability.modifier+=1:!add&&card.durability.modifier>0&&(card.durability.modifier-=1)},service.changeSpeed=function(card,add){add&&card.speed.modifier<1?card.speed.modifier+=1:!add&&card.speed.modifier>-1&&(card.speed.modifier-=1)},service.changeFinesse=function(card,add){add&&card.finesse.modifier<0?card.finesse.modifier+=1:!add&&card.finesse.modifier>-2&&(card.finesse.modifier-=1)},service.changeWeight=function(card,add){add&&card.weight<9?card.weight+=1:!add&&card.weight>0&&(card.weight-=1)},service.changeCost=function(card,add){add&&card.cost<18?card.cost+=1:!add&&card.cost>0&&(card.cost-=1)},service.browseCards=function(cardType){switch(service.cardType=cardType,service.cardType){case 1:service.cardList=Traits.query(function(){service.setCardList()});break;case 2:service.cardList=Feats.query(function(){service.setCardList()});break;case 3:service.cardList=Augments.query(function(){service.setCardList()});break;case 4:service.cardList=Items.query(function(){service.setCardList()})}},service.readCard=function(card){var cardId=card._id;switch(service.cardType){case 1:card=Traits.get({traitId:cardId});break;case 2:card=Feats.get({featId:cardId});break;case 3:card=Augments.get({augmentId:cardId});break;case 4:card=Items.get({itemId:cardId})}service.unlockCard(card)},service.editCard=function(card){card.$update(function(){service.unlockCard(card)},function(errorResponse){console.log(errorResponse)})},service.addCard=function(index){switch(service.cardType){case 1:this.card=new Traits({cardNumber:index}),this.card.$save(function(){for(var i in service.cardList)service.cardList[i].cardNumber>=index&&(service.cardList[i].cardNumber+=1,service.cardList[i].x_index+=1,service.cardList[i].x_coord+=250);service.cardList.push(service.card),service.unlockCard(service.card)},function(errorResponse){console.log(errorResponse)});break;case 2:this.card=new Feats({cardNumber:index}),this.card.$save(function(){for(var i in service.cardList)service.cardList[i].cardNumber>=index&&(service.cardList[i].cardNumber+=1,service.cardList[i].x_index+=1,service.cardList[i].x_coord+=250);service.cardList.push(service.card),service.unlockCard(service.card)},function(errorResponse){console.log(errorResponse)});break;case 3:this.card=new Augments({cardNumber:index}),this.card.$save(function(){for(var i in service.cardList)service.cardList[i].cardNumber>=index&&(service.cardList[i].cardNumber+=1,service.cardList[i].x_index+=1,service.cardList[i].x_coord+=250);service.cardList.push(service.card),service.unlockCard(service.card)},function(errorResponse){console.log(errorResponse)});break;case 4:this.card=new Items({cardNumber:index}),this.card.$save(function(){for(var i in service.cardList)service.cardList[i].cardNumber>=index&&(service.cardList[i].cardNumber+=1,service.cardList[i].x_index+=1,service.cardList[i].x_coord+=250);service.cardList.push(service.card),service.unlockCard(service.card)},function(errorResponse){console.log(errorResponse)})}},service.deleteCard=function(card){if(card){card.$remove();for(var i in service.cardList)this.cardList[i]===card&&this.cardList.splice(i,1),this.cardList[i]&&this.cardList[i].cardNumber>card.cardNumber&&(console.log(this.cardList[i].cardNumber+" / "+card.cardNumber),this.cardList[i].cardNumber-=1,this.cardList[i].x_index-=1,this.cardList[i].x_coord-=250)}},service}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]);var coreModule=angular.module("core");coreModule.controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").directive("modalDialogWindow",function(){return{restrict:"E",scope:{show:"="},transclude:!0,templateUrl:"../modules/core/views/modal-window.html",link:function(scope,element,attrs){scope.dialogStyle={},attrs.width&&(scope.dialogStyle.width=attrs.width),attrs.height&&(scope.dialogStyle.height=attrs.height),scope.hideModal=function(){scope.show=!1}}}}),angular.module("core").factory("DataSRVC",[function(){var service={};return service.sexArray=["---","Male","Female"],service.diceList=[{order:1,name:"d__",sides:0,image:"modules/core/img/d___.png"},{order:2,name:"d4",sides:4,image:"modules/core/img/d_04.png"},{order:3,name:"d6",sides:6,image:"modules/core/img/d_06.png"},{order:4,name:"d6",sides:6,image:"modules/core/img/d_06.png"},{order:5,name:"d8",sides:8,image:"modules/core/img/d_08.png"},{order:6,name:"d8",sides:8,image:"modules/core/img/d_08.png"},{order:7,name:"d10",sides:10,image:"modules/core/img/d_10.png"},{order:8,name:"d10",sides:10,image:"modules/core/img/d_10.png"},{order:9,name:"d12",sides:12,image:"modules/core/img/d_12.png"}],service.targetTypes=["Utility","Close","Close Area","Distant","Distant Area"],service.closeDetails=["1/1","1/2","1/3","1/4","2/1","2/2","2/3","2/4","3/1","3/2","3/3","3/4","4/1","4/2","4/3"],service.closeAreaDetails=["2x2","3x3","4x4","5x5"],service.distantDetails=["4/1","6/1","8/1","10/1","12/1","14/1","16/1","18/1","20/1","22/1","24/1"],service.distantAreaDetails=["8/2x2","10/2x2","12/2x2","16/2x2","10/3x3","12/3x3","16/3x3","20/3x3","12/4x4","16/4x4","20/4x4"],service.actionKeywords=["Default","Single-use","Thrown","Reflexive","Melee","Ranged","Evocation","Invocation"],service.actionFrequency=["Free","Count: 1","Count: 2","Count: 3","Count: 4","Count: 5","Disruptive","Responsive"],service.dice=["1d4","1d6","1d8","1d10","1d12"],service.abilities=["STR","PHY","FLE","DEX","ACU","INT","WIS","CHA"],service.attackTypes=["Melee","Ranged","Evocation","Invocation"],service.defenseTypes=["Block","Dodge","Alertness","Tenacity"],service.prerequisites=["1d10 STR","1d10 PHY","1d10 FLE","1d10 DEX","1d10 ACU","1d10 INT","1d10 WIS","1d10 CHA"],service.archetypes=["General","Guardian","Hunter","Mastermind","Champion"],service.allegiances=["Unaligned","Nymaria","Vakhelos","Heresy","Inquisition"],service.races=["Weolda","Algharr","Durhok","Feyal","Sylthaun"],service.itemTypes=["Melee","Melee / Ranged","Melee / Invocation","Ranged","Ranged / Melee","Ranged / Evocation","Evocation","Evocation / Invocation","Evocation / Ranged","Invocation","Invocation / Evocation","Invocation / Melee"],service.itemSlots=["One-handed","Two-handed","One-handed or Paired","One-handed or Two-handed","Armor","Shield","Gloves","Boots","Cloak","Amulet","Ring","Belt","Helmet","Consumable","Provision"],service}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("npcs").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Non-player Characters","npcs","/npcs")}]),angular.module("npcs").config(["$stateProvider",function($stateProvider){$stateProvider.state("listNpcs",{url:"/npcs",templateUrl:"modules/npcs/views/list-npcs.client.view.html"})}]),angular.module("npcs").controller("NpcsController",["$scope","$stateParams","$location","Authentication","Npcs",function($scope,$stateParams,$location,Authentication,Npcs){$scope.authentication=Authentication,$scope.create=function(){var npc=new Npcs({name:this.name});npc.$save(function(response){$location.path("npcs/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(npc){if(npc){npc.$remove();for(var i in $scope.npcs)$scope.npcs[i]===npc&&$scope.npcs.splice(i,1)}else $scope.npc.$remove(function(){})},$scope.update=function(){var npc=$scope.npc;npc.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.npcs=Npcs.query(function(response){console.log(response)})},$scope.findOne=function(){$scope.npc=Npcs.get({npcId:$stateParams.npcId})}}]),angular.module("npcs").factory("Npcs",["$resource",function($resource){return $resource("npcs/:npcId",{npcId:"@_id"},{update:{method:"PUT"}})}]),angular.module("pcs").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Player Characters","pcs","/pcs")}]),angular.module("pcs").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPcs",{url:"/pcs",templateUrl:"modules/pcs/views/list-pcs.client.view.html"}).state("editPc",{url:"/pcs/:pcId/edit",templateUrl:"modules/pcs/views/edit-pc.client.view.html"})}]);var pcsModule=angular.module("pcs");pcsModule.controller("PcsCtrl",["$scope","$location","$log","DataSRVC","Pcs","PcsCardDeck","PcsCard1","PcsCard2","PcsCard3","PcsTraits","PcsFeats","PcsAugments","PcsItems",function($scope,$location,$log,DataSRVC,Pcs,PcsCardDeck,PcsCard1,PcsCard2,PcsCard3,PcsTraits,PcsFeats,PcsAugments,PcsItems){$scope.dataSRVC=DataSRVC,$scope.pcs=Pcs,$scope.pcsCardDeck=PcsCardDeck,$scope.pcsCard1=PcsCard1,$scope.pcsCard2=PcsCard2,$scope.pcsCard3=PcsCard3,$scope.pcsTraits=PcsTraits,$scope.pcsFeats=PcsFeats,$scope.pcsAugments=PcsAugments,$scope.pcsItems=PcsItems,$scope.newPc=function(){Pcs.addPc(),Pcs.pcNew=!0,Pcs.pcSaved=!1},$scope.openPc=function(pc){$location.path("pcs/"+pc._id+"/edit"),Pcs.pcNew=!1,Pcs.pcSaved=!1},$scope.savePc=function(){Pcs.editPc(),Pcs.pcNew=!1,Pcs.pcSaved=!0},$scope.exitPc=function(){Pcs.pcNew&&Pcs.deletePc(),$location.path("pcs")};var moveHorizontal=function(event,object){object.panel.y_overlap&&0===object.panel.y_index||0===Pcs.pc.cards[Pcs.lowestCard(object.panel.x_index)].y_index?PcsCardDeck.switchHorizontal(object.slot,object.panel):PcsCardDeck.unstackCard(object.slot,object.panel)},moveDiagonalUp=function(event,object){0===object.panel.y_index&&object.panel.y_overlap||0===Pcs.pc.cards[Pcs.lowestCard(object.panel.x_index)].y_index?PcsCardDeck.stackUnder(object.slot,object.panel):PcsCardDeck.unstackCard(object.slot,object.panel)},moveDiagonalDown=function(event,object){0===object.panel.y_index&&object.panel.y_overlap||0===Pcs.pc.cards[Pcs.lowestCard(object.panel.x_index)].y_index?PcsCardDeck.stackOver(object.slot,object.panel):PcsCardDeck.unstackCard(object.slot,object.panel)},moveVertical=function(event,object){PcsCardDeck.switchVertical(object.slot,object.panel)},unstackLeft=function(event,object){object.panel.y_index>0&&PcsCardDeck.unstackCard({x_index:-1},object.panel)},unstackRight=function(event,object){if(object.panel.y_index>0){var unstack_index=Pcs.pc.cards[Pcs.lastCard()].x_index+1;PcsCardDeck.unstackCard({x_index:unstack_index},object.panel)}},toggleOverlap=function(event,object){PcsCardDeck.toggleOverlap(object.panel)},onReleaseCard=function(){PcsCardDeck.onReleaseCard()};$scope.$on("cardSlot:moveHorizontal",moveHorizontal),$scope.$on("cardSlot:moveDiagonalUp",moveDiagonalUp),$scope.$on("cardSlot:moveDiagonalDown",moveDiagonalDown),$scope.$on("cardSlot:moveVertical",moveVertical),$scope.$on("cardDeck:unstackLeft",unstackLeft),$scope.$on("cardDeck:unstackRight",unstackRight),$scope.$on("cardPanel:toggleOverlap",toggleOverlap),$scope.$on("cardPanel:onReleaseCard",onReleaseCard),$scope.$on("pcsCard1:updateStrPhy",function(event,object){PcsCard1.factorBlock(object._str,object._phy),PcsCard2.factorHealth(),PcsCard2.factorStamina(),PcsCard2.factorCarryingCapacity()}),$scope.$on("pcsCard1:updateFleDex",function(event,object){PcsCard1.factorDodge(object._fle,object._dex)}),$scope.$on("pcsCard1:updateAcuInt",function(event,object){PcsCard1.factorAlertness(object._acu,object._int)}),$scope.$on("pcsCard1:updateWisCha",function(event,object){PcsCard1.factorTenacity(object._wis,object._cha)}),$scope.$watch("pcsCard2.EXP",function(newValue,oldValue){Pcs.pc&&newValue!==oldValue&&(PcsCard2.EXP=parseInt(newValue),Pcs.pc.experience=parseInt(newValue))}),$scope.$watch("pcs.pc.experience",function(newValue,oldValue){Pcs.pc&&newValue!==oldValue&&(PcsCard2.factorExperience(),newValue!==PcsCard2.EXP&&(PcsCard2.EXP=newValue))}),$scope.$watch("pcs.pc.level",function(){Pcs.pc.abilities&&(PcsCard2.factorHealth(),PcsCard2.factorStamina(),PcsTraits.factorTraitLimit(),PcsFeats.factorFeatLimit(),PcsAugments.factorAugmentLimit())})}]),angular.module("core").directive("diceBox",function(){return{restrict:"A",templateUrl:"../modules/pcs/views/dice-box.html"}});var cardsModule=angular.module("pcs");cardsModule.factory("PcsAugments",["Pcs","PcsCardDeck",function(Pcs,PcsCardDeck){var service={};return service.factorAugmentLimit=function(){Pcs.pc.cards[1].augmentLimit=Math.round((Pcs.pc.cards[1].level||0)/4),this.validateAugments()},service.validateAugments=function(){for(var ia=0;ia<Pcs.pc.cards[1].augmentLimit;ia++)this.augmentAtLevel(4*ia+2)||this.addAugment(4*ia+2);for(var ic=0;ic<Pcs.pc.cards.length;ic++)Pcs.pc.cards[ic].level>Pcs.pc.cards[1].level&&PcsCardDeck.removeCard(ic)},service.augmentAtLevel=function(level){for(var augmentAtLevel=!1,ib=0;ib<Pcs.pc.cards.length;ib++)"augment"===Pcs.pc.cards[ib].cardType&&Pcs.pc.cards[ib].level===level&&(augmentAtLevel=!0);return augmentAtLevel},service.addAugment=function(level){var newAugment={name:"Level "+level+" Augment",cardType:"augment",x_index:Pcs.pc.cards[Pcs.lastCard()].x_index+1,y_index:0,x_coord:Pcs.pc.cards[Pcs.lastCard()].x_coord+250,y_coord:0,x_dim:250,y_dim:350,x_overlap:!1,y_overlap:!1,locked:!0,level:level};
Pcs.pc.cards.push(newAugment)},service}]);var cardsModule=angular.module("pcs");cardsModule.factory("PcsCardDeck",["Pcs",function(Pcs){var service={},x_dim=250,y_dim=350,x_tab=25,y_tab=50,x_cover=225,y_cover=300;return service.cardMoved=!1,service.movingUp=!1,service.movingDown=!1,service.movingLeft=!1,service.movingRight=!1,service.setMovingUp=function(interval){service.movingUp=!0,service.cardMoved=!0,setTimeout(function(){service.movingUp=!1},interval)},service.setMovingDown=function(interval){service.movingDown=!0,service.cardMoved=!0,setTimeout(function(){service.movingDown=!1},interval)},service.setMovingLeft=function(interval){service.movingLeft=!0,service.cardMoved=!0,setTimeout(function(){service.movingLeft=!1},interval)},service.setMovingRight=function(interval){service.movingRight=!0,service.cardMoved=!0,setTimeout(function(){service.movingRight=!1},interval)},service.onReleaseCard=function(){service.cardMoved=!1,service.movingUp=!1,service.movingDown=!1,service.movingLeft=!1,service.movingRight=!1},service.switchHorizontal=function(slot,panel){var slot_x_index=slot.x_index,slot_y_index=slot.y_index,slot_x_overlap=slot.x_overlap,panel_x_index=panel.x_index,panel_y_index=panel.y_index,panel_x_overlap=panel.x_overlap;if(0===slot_y_index&&0===panel_y_index)if(panel_x_index-slot_x_index!==1||service.movingRight){if(slot_x_index-panel_x_index===1&&!service.movingLeft){this.setMovingRight(400);for(var ib=0;ib<Pcs.pc.cards.length;ib++)Pcs.pc.cards[ib].x_index===slot_x_index?(Pcs.pc.cards[ib].x_index-=1,panel_x_index>0?Pcs.pc.cards[ib].x_coord-=panel_x_overlap?x_tab:x_dim:(Pcs.pc.cards[ib].x_coord=0,Pcs.pc.cards[ib].x_overlap=!1)):Pcs.pc.cards[ib].x_index===panel_x_index?(Pcs.pc.cards[ib].x_index+=1,panel_x_index>0?Pcs.pc.cards[ib].x_coord+=slot_x_overlap?x_tab:x_dim:(Pcs.pc.cards[ib].x_coord=x_dim,Pcs.pc.cards[ib].x_overlap=!1)):0===panel_x_index&&slot_x_overlap&&(Pcs.pc.cards[ib].x_coord+=x_cover)}}else{this.setMovingLeft(400);for(var ia=0;ia<Pcs.pc.cards.length;ia++)Pcs.pc.cards[ia].x_index===slot_x_index?(Pcs.pc.cards[ia].x_index+=1,slot_x_index>0?Pcs.pc.cards[ia].x_coord+=panel_x_overlap?x_cover:x_dim:(Pcs.pc.cards[ia].x_coord=x_dim,Pcs.pc.cards[ia].x_overlap=!1)):Pcs.pc.cards[ia].x_index===panel_x_index?(Pcs.pc.cards[ia].x_index-=1,slot_x_index>0?Pcs.pc.cards[ia].x_coord-=slot_x_overlap?x_tab:x_dim:(Pcs.pc.cards[ia].x_coord=0,Pcs.pc.cards[ia].x_overlap=!1)):0===slot_x_index&&panel_x_overlap&&(Pcs.pc.cards[ia].x_coord+=x_cover)}},service.switchVertical=function(slot,panel){{var slot_index=Pcs.cardByIndex(slot.x_index,slot.y_index),slot_x_index=slot.x_index,slot_y_index=slot.y_index,panel_index=(slot.y_coord,slot.y_overlap,Pcs.cardByIndex(panel.x_index,panel.y_index)),panel_y_index=(panel.x_index,panel.y_index);panel.y_coord,panel.y_overlap}if(panel_y_index-slot_y_index!==1||service.movingDown){if(slot_y_index-panel_y_index===1&&!service.movingUp){this.setMovingDown(400),Pcs.pc.cards[slot_index].y_index=panel_y_index,Pcs.pc.cards[panel_index].y_index=slot_y_index,Pcs.pc.cards[panel_index].y_coord=Pcs.pc.cards[panel_index].y_index*y_tab,Pcs.pc.cards[panel_index].y_overlap=!1;for(var ib=0;ib<Pcs.pc.cards.length;ib++)Pcs.pc.cards[ib].x_index===slot_x_index&&(Pcs.pc.cards[ib].y_index<slot_y_index?(Pcs.pc.cards[ib].y_coord=Pcs.pc.cards[ib].y_index*y_tab,Pcs.pc.cards[ib].y_overlap=!0):Pcs.pc.cards[ib].y_index>slot_y_index&&(Pcs.pc.cards[ib].y_coord=y_cover+Pcs.pc.cards[ib].y_index*y_tab,Pcs.pc.cards[ib].y_overlap=Pcs.pc.cards[ib].y_index<Pcs.pc.cards[Pcs.lowestCard(slot_x_index)].y_index?!0:!1))}}else{this.setMovingUp(400),Pcs.pc.cards[slot_index].y_index=panel_y_index,Pcs.pc.cards[panel_index].y_index=slot_y_index,Pcs.pc.cards[panel_index].y_coord=Pcs.pc.cards[panel_index].y_index*y_tab,Pcs.pc.cards[panel_index].y_overlap=!1;for(var ia=0;ia<Pcs.pc.cards.length;ia++)Pcs.pc.cards[ia].x_index===slot_x_index&&(Pcs.pc.cards[ia].y_index<slot_y_index?(Pcs.pc.cards[ia].y_coord=Pcs.pc.cards[ia].y_index*y_tab,Pcs.pc.cards[ia].y_overlap=!0):Pcs.pc.cards[ia].y_index>slot_y_index&&(Pcs.pc.cards[ia].y_coord=y_cover+Pcs.pc.cards[ia].y_index*y_tab,Pcs.pc.cards[ia].y_overlap=Pcs.pc.cards[ia].y_index<Pcs.pc.cards[Pcs.lowestCard(slot_x_index)].y_index?!0:!1))}},service.stackOver=function(slot,panel){var slot_index=Pcs.cardByIndex(slot.x_index,slot.y_index),slot_x_index=(Pcs.cardByIndex(panel.x_index,panel.y_index),slot.x_index),slot_y_index=slot.y_index,slot_y_coord=(slot.x_coord,slot.y_coord),slot_y_overlap=(slot.x_overlap,slot.y_overlap),panel_x_index=(Pcs.pc.cards[Pcs.lowestCard(slot_x_index)].y_index,Pcs.pc.cards[Pcs.lowestCard(slot_x_index)].y_coord,panel.x_index),panel_lowest_index=(panel.y_index,panel.x_coord,panel.y_coord,panel.x_overlap,panel.y_overlap,Pcs.pc.cards[Pcs.lowestCard(panel_x_index)].y_index),panel_lowest_coord=Pcs.pc.cards[Pcs.lowestCard(panel_x_index)].y_coord;if(panel_x_index-slot_x_index!==1||service.movingRight){if(slot_x_index-panel_x_index===1&&!service.movingLeft){this.setMovingLeft(400),Pcs.pc.cards[slot_index].y_overlap=!0,Pcs.pc.cards[Pcs.lowestCard(panel_x_index)].y_overlap=slot_y_overlap;for(var ib=0;ib<Pcs.pc.cards.length;ib++)Pcs.pc.cards[ib].x_index===panel_x_index&&(Pcs.pc.cards[ib].y_coord+=slot_y_coord+y_tab,Pcs.pc.cards[ib].y_index+=slot_y_index+1),Pcs.pc.cards[ib].x_index>panel_x_index&&(Pcs.pc.cards[ib].x_coord-=x_dim,Pcs.pc.cards[ib].x_index-=1,Pcs.pc.cards[ib].x_index===panel_x_index&&Pcs.pc.cards[ib].y_index>slot_y_index&&(Pcs.pc.cards[ib].y_coord+=panel_lowest_coord+y_tab,Pcs.pc.cards[ib].y_index+=panel_lowest_index+1))}}else{this.setMovingRight(400),Pcs.pc.cards[slot_index].y_overlap=!0,Pcs.pc.cards[Pcs.lowestCard(panel_x_index)].y_overlap=slot_y_overlap;for(var ia=0;ia<Pcs.pc.cards.length;ia++)Pcs.pc.cards[ia].x_index===panel_x_index&&(Pcs.pc.cards[ia].y_coord+=slot_y_coord+y_tab,Pcs.pc.cards[ia].y_index+=slot_y_index+1),Pcs.pc.cards[ia].x_index===slot_x_index&&Pcs.pc.cards[ia].y_index>slot_y_index&&(Pcs.pc.cards[ia].y_coord+=panel_lowest_coord+y_tab,Pcs.pc.cards[ia].y_index+=panel_lowest_index+1),Pcs.pc.cards[ia].x_index>slot_x_index&&(Pcs.pc.cards[ia].x_coord-=x_dim,Pcs.pc.cards[ia].x_index-=1)}},service.stackUnder=function(slot,panel){{var panel_index=Pcs.cardByIndex(panel.x_index,panel.y_index),panel_x_index=panel.x_index,panel_lowest_index=(panel.y_index,panel.x_coord,panel.y_coord,panel.x_overlap,panel.y_overlap,Pcs.pc.cards[Pcs.lowestCard(panel_x_index)].y_index),panel_lowest_coord=Pcs.pc.cards[Pcs.lowestCard(panel_x_index)].y_coord,slot_x_index=slot.x_index;slot.y_index,Pcs.pc.cards[Pcs.lowestCard(slot_x_index)].y_index,Pcs.pc.cards[Pcs.lowestCard(slot_x_index)].y_coord}if(panel_x_index-slot_x_index!==1||service.movingRight){if(slot_x_index-panel_x_index===1&&!service.movingLeft){this.setMovingRight(400),Pcs.pc.cards[panel_index].y_overlap=!0;for(var ib=0;ib<Pcs.pc.cards.length;ib++)Pcs.pc.cards[ib].x_index===slot_x_index&&(Pcs.pc.cards[ib].y_coord+=panel_lowest_coord+y_tab,Pcs.pc.cards[ib].y_index+=panel_lowest_index+1),Pcs.pc.cards[ib].x_index>panel_x_index&&(Pcs.pc.cards[ib].x_coord-=x_dim,Pcs.pc.cards[ib].x_index-=1)}}else{this.setMovingLeft(400),Pcs.pc.cards[panel_index].y_overlap=!0;for(var ia=0;ia<Pcs.pc.cards.length;ia++)Pcs.pc.cards[ia].x_index===slot_x_index&&(Pcs.pc.cards[ia].y_coord+=panel_lowest_coord+y_tab,Pcs.pc.cards[ia].y_index+=panel_lowest_index+1),Pcs.pc.cards[ia].x_index>slot_x_index&&(Pcs.pc.cards[ia].x_coord-=x_dim,Pcs.pc.cards[ia].x_index-=1)}},service.unstackCard=function(slot,panel){if(Pcs.pc.cards[Pcs.lowestCard(panel.x_index)].y_index>0){var panel_index=Pcs.cardByIndex(panel.x_index,panel.y_index),panel_x_index=panel.x_index,panel_y_index=panel.y_index,panel_y_coord=(panel.x_coord,panel.y_coord),panel_y_overlap=(panel.x_overlap,panel.y_overlap),slot_x_index=slot.x_index;if(panel_x_index-slot_x_index!==1||service.movingLeft){if(slot_x_index-panel_x_index===1&&!service.movingLeft){if(this.setMovingLeft(400),panel_y_overlap)for(var ic=0;ic<Pcs.pc.cards.length;ic++)Pcs.pc.cards[ic].x_index>panel_x_index&&(Pcs.pc.cards[ic].x_coord+=x_dim,Pcs.pc.cards[ic].x_index+=1),Pcs.pc.cards[ic].x_index===panel_x_index&&Pcs.pc.cards[ic].y_index>=panel_y_index&&(Pcs.pc.cards[ic].x_index+=1,Pcs.pc.cards[ic].x_coord+=x_dim,Pcs.pc.cards[ic].y_index-=panel_y_index,Pcs.pc.cards[ic].y_coord-=panel_y_coord);else if(!panel_y_overlap){for(var id=0;id<Pcs.pc.cards.length;id++)Pcs.pc.cards[id].x_index>panel_x_index&&(Pcs.pc.cards[id].x_coord+=x_dim,Pcs.pc.cards[id].x_index+=1),Pcs.pc.cards[id].x_index===panel_x_index&&Pcs.pc.cards[id].y_index>panel_y_index&&(Pcs.pc.cards[id].y_coord-=y_dim,Pcs.pc.cards[id].y_index-=1);Pcs.pc.cards[panel_index].x_coord+=x_dim,Pcs.pc.cards[panel_index].x_index+=1,Pcs.pc.cards[panel_index].y_coord=0,Pcs.pc.cards[panel_index].y_index=0}Pcs.pc.cards[Pcs.lowestCard(panel_x_index)].y_overlap=!1}}else{if(this.setMovingRight(400),panel_y_overlap)for(var ia=0;ia<Pcs.pc.cards.length;ia++)Pcs.pc.cards[ia].x_index>panel_x_index&&(Pcs.pc.cards[ia].x_coord+=x_dim,Pcs.pc.cards[ia].x_index+=1),Pcs.pc.cards[ia].x_index===panel_x_index&&panel_y_overlap&&(Pcs.pc.cards[ia].y_index<panel_y_index?(Pcs.pc.cards[ia].x_coord+=x_dim,Pcs.pc.cards[ia].x_index+=1):Pcs.pc.cards[ia].y_index>=panel_y_index&&(Pcs.pc.cards[ia].y_coord-=panel_y_coord,Pcs.pc.cards[ia].y_index-=panel_y_index));else if(!panel_y_overlap){for(var ib=0;ib<Pcs.pc.cards.length;ib++)Pcs.pc.cards[ib].x_index>=panel_x_index&&(Pcs.pc.cards[ib].x_index===panel_x_index&&Pcs.pc.cards[ib].y_index>panel_y_index&&(Pcs.pc.cards[ib].y_coord-=y_dim,Pcs.pc.cards[ib].y_index-=1),ib!==panel_index&&(Pcs.pc.cards[ib].x_coord+=x_dim,Pcs.pc.cards[ib].x_index+=1));Pcs.pc.cards[panel_index].y_coord=0,Pcs.pc.cards[panel_index].y_index=0}Pcs.pc.cards[Pcs.lowestCard(panel_x_index+1)].y_overlap=!1}}},service.toggleOverlap=function(card){service.cardMoved||(card.x_index>0&&0===Pcs.pc.cards[Pcs.lowestCard(card.x_index)].y_index?this.toggle_X_Overlap(card):card.y_index!==Pcs.pc.cards[Pcs.lowestCard(card.x_index)].y_index&&this.toggle_Y_Overlap(card))},service.toggle_X_Overlap=function(card){var x_index=card.x_index,y_index=card.y_index,_card=Pcs.cardByIndex(x_index,y_index);if(x_index>0)if(Pcs.pc.cards[_card].x_overlap){for(var ia=0;ia<Pcs.pc.cards.length;ia++)x_index<=Pcs.pc.cards[ia].x_index&&(Pcs.pc.cards[ia].x_coord+=x_cover);Pcs.pc.cards[_card].x_overlap=!1}else if(!Pcs.pc.cards[_card].x_overlap){for(var ib=0;ib<Pcs.pc.cards.length;ib++)x_index<=Pcs.pc.cards[ib].x_index&&(Pcs.pc.cards[ib].x_coord-=x_cover);Pcs.pc.cards[_card].x_overlap=!0}},service.toggle_Y_Overlap=function(card){var card_x_index=card.x_index,card_y_index=card.y_index,card_index=Pcs.cardByIndex(card_x_index,card_y_index),lowest_index=(card.y_overlap,Pcs.lowestCard(card_x_index)),lowest_y_index=Pcs.pc.cards[lowest_index].y_index;if(lowest_y_index>card_y_index)if(Pcs.pc.cards[card_index].y_overlap){Pcs.pc.cards[card_index].y_coord=Pcs.pc.cards[card_index].y_index*y_tab,Pcs.pc.cards[card_index].y_overlap=!1;for(var ia=0;ia<Pcs.pc.cards.length;ia++)Pcs.pc.cards[ia].x_index===card_x_index&&(Pcs.pc.cards[ia].y_index<card_y_index?(Pcs.pc.cards[ia].y_coord=Pcs.pc.cards[ia].y_index*y_tab,Pcs.pc.cards[ia].y_overlap=!0):Pcs.pc.cards[ia].y_index>card_y_index&&(Pcs.pc.cards[ia].y_coord=y_cover+Pcs.pc.cards[ia].y_index*y_tab,Pcs.pc.cards[ia].y_index<lowest_y_index&&(Pcs.pc.cards[ia].y_overlap=!0)))}else if(!Pcs.pc.cards[card_index].y_overlap){for(var ib=0;ib<Pcs.pc.cards.length;ib++)card_x_index===Pcs.pc.cards[ib].x_index&&(Pcs.pc.cards[ib].y_coord=Pcs.pc.cards[ib].y_index*y_tab,Pcs.pc.cards[ib].y_index<lowest_y_index&&(Pcs.pc.cards[ib].y_overlap=!0));Pcs.pc.cards[card_index].y_overlap=!0}},service.removeCard=function(card){var card_x_index=Pcs.pc.cards[card].x_index,card_width=Pcs.pc.cards[card].x_overlap?x_tab:Pcs.pc.cards[card].x_dim,card_y_index=Pcs.pc.cards[card].y_index,card_height=Pcs.pc.cards[card].y_overlap?y_tab:Pcs.pc.cards[card].y_dim,lowest_y_index=Pcs.pc.cards[Pcs.lowestCard(card_x_index)].y_index;Pcs.pc.cards.splice(card,1);for(var id=0;id<Pcs.pc.cards.length;id++)lowest_y_index>0?lowest_y_index>0&&(Pcs.pc.cards[id].x_index===card_x_index&&Pcs.pc.cards[id].y_index>card_y_index&&(Pcs.pc.cards[id].y_index-=1,Pcs.pc.cards[id].y_coord-=card_height),Pcs.pc.cards[Pcs.lowestCard(card_x_index)].y_overlap=!1):0===lowest_y_index&&Pcs.pc.cards[id].x_index>card_x_index&&(Pcs.pc.cards[id].x_index-=1,Pcs.pc.cards[id].x_coord-=card_width)},service}]);var pcsModule=angular.module("pcs");pcsModule.factory("PcsCard1",["$rootScope","Pcs",function($rootScope,Pcs){var service={};return service.chosenDie={},service.previousDie={},service.chosenAbility={},service.diceBoxShown=!1,service.hideDiceBox=function(){this.diceBoxShown=!this.diceBoxShown},service.chooseAbility=function(ability){this.diceBoxShown=!0,this.chosenAbility=Pcs.pc.abilities[ability]},service.chooseDie=function(dice){switch(this.chosenDie=Pcs.pc.dicepool[dice],this.previousDie=this.chosenAbility.dice,Pcs.pc.dicepool[dice]=Pcs.pc.dicepool[0],this.previousDie.order>0&&(Pcs.pc.dicepool[this.previousDie.order]=this.previousDie),Pcs.pc.abilities[this.chosenAbility.order].dice=this.chosenDie,this.hideDiceBox(),this.chosenAbility.order){case 0:case 1:$rootScope.$broadcast("pcsCard1:updateStrPhy",{_str:Pcs.pc.abilities[0],_phy:Pcs.pc.abilities[1]});break;case 2:case 3:$rootScope.$broadcast("pcsCard1:updateFleDex",{_fle:Pcs.pc.abilities[2],_dex:Pcs.pc.abilities[3]});break;case 4:case 5:$rootScope.$broadcast("pcsCard1:updateAcuInt",{_acu:Pcs.pc.abilities[4],_int:Pcs.pc.abilities[5]});break;case 6:case 7:$rootScope.$broadcast("pcsCard1:updateWisCha",{_wis:Pcs.pc.abilities[6],_cha:Pcs.pc.abilities[7]})}},service.factorBlock=function(_str,_phy){Pcs.pc.block=Number(_str.dice.sides)>Number(_phy.dice.sides)?"2"+_str.dice.name:"2"+_phy.dice.name},service.factorDodge=function(_fle,_dex){Pcs.pc.dodge=Number(_fle.dice.sides)>Number(_dex.dice.sides)?"2"+_fle.dice.name:"2"+_dex.dice.name},service.factorAlertness=function(_acu,_int){Pcs.pc.alertness=Number(_acu.dice.sides)>Number(_int.dice.sides)?"2"+_acu.dice.name:"2"+_int.dice.name},service.factorTenacity=function(_wis,_cha){Pcs.pc.tenacity=Number(_wis.dice.sides)>Number(_cha.dice.sides)?"2"+_wis.dice.name:"2"+_cha.dice.name},service}]);var pcsModule=angular.module("pcs");pcsModule.factory("PcsCard2",["$rootScope","Pcs",function($rootScope,Pcs){var service={};return service.EXP=0,Pcs.pc&&(service.EXP=Pcs.pc.experience),service.factorExperience=function(){for(var mLevel=0,mExperience=Number(Pcs.pc.experience),increment=8;mExperience>=increment;increment++)mLevel++,mExperience-=increment;Pcs.pc.level=mLevel},service.factorHealth=function(){Pcs.pc.healthLimit=Math.round((Number(Pcs.pc.abilities[0].dice.sides)+Number(Pcs.pc.abilities[1].dice.sides))*((Pcs.pc.level||0)/16+1)),Pcs.pc.healthCurrent=Number(Pcs.pc.healthLimit-Pcs.pc.injury)},service.factorStamina=function(){Pcs.pc.staminaLimit=Math.round((Number(Pcs.pc.abilities[0].dice.sides)+Number(Pcs.pc.abilities[1].dice.sides))*((Pcs.pc.level||0)/16+1)),Pcs.pc.staminaCurrent=Number(Pcs.pc.healthLimit-Pcs.pc.injury)},service.factorCarryingCapacity=function(){Pcs.pc.carryCurrent=0,Pcs.pc.carryLimit=Number(Pcs.pc.abilities[0].dice.sides)+Number(Pcs.pc.abilities[1].dice.sides)},service}]);var pcsModule=angular.module("pcs");pcsModule.factory("PcsCard3",["$rootScope","Pcs",function(){var service={};return service}]);var cardsModule=angular.module("pcs");cardsModule.factory("PcsFeats",["Pcs","PcsCardDeck",function(Pcs,PcsCardDeck){var service={};return service.factorFeatLimit=function(){Pcs.pc.featLimit=Math.ceil(Pcs.pc.level/4)||0,Pcs.pc.featDeck=Pcs.pc.level,this.validateFeats()},service.validateFeats=function(){for(var ia=0;ia<Pcs.pc.featDeck;ia++)this.featAtLevel(ia+1)||this.addFeat(ia+1);for(var ic=0;ic<Pcs.pc.cards.length;ic++)Pcs.pc.cards[ic].level>Pcs.pc.level&&PcsCardDeck.removeCard(ic)},service.featAtLevel=function(level){for(var featAtLevel=!1,ib=0;ib<Pcs.pc.cards.length;ib++)"feat"===Pcs.pc.cards[ib].cardType&&Pcs.pc.cards[ib].level===level&&(featAtLevel=!0);return featAtLevel},service.addFeat=function(level){var newFeat={name:"Level "+level+" Feat",cardType:"feat",x_index:Pcs.pc.cards[Pcs.lastCard()].x_index+1,y_index:0,x_coord:Pcs.pc.cards[Pcs.lastCard()].x_coord+250,y_coord:0,x_overlap:!1,y_overlap:!1,locked:!0,level:level};Pcs.pc.cards.push(newFeat)},service}]);var cardsModule=angular.module("pcs");cardsModule.factory("PcsItems",["Pcs",function(){var service={};return service}]);var cardsModule=angular.module("pcs");cardsModule.factory("PcsTraits",["Pcs","PcsCardDeck",function(Pcs,PcsCardDeck){var service={};return service.factorTraitLimit=function(){Pcs.pc.traitLimit=Math.floor((Pcs.pc.level||0)/4+1),this.validateTraits()},service.validateTraits=function(){for(var ia=0;ia<Pcs.pc.traitLimit;ia++)this.traitAtLevel(4*ia)||this.addTrait(4*ia);for(var ic=0;ic<Pcs.pc.cards.length;ic++)Pcs.pc.cards[ic].level>Pcs.pc.level&&PcsCardDeck.removeCard(ic)},service.traitAtLevel=function(level){for(var traitAtLevel=!1,ib=0;ib<Pcs.pc.cards.length;ib++)"trait"===Pcs.pc.cards[ib].cardType&&Pcs.pc.cards[ib].level===level&&(traitAtLevel=!0);return traitAtLevel},service.addTrait=function(level){var newTrait={name:"Level "+level+" Trait",cardType:"trait",x_index:Pcs.pc.cards[Pcs.lastCard()].x_index+1,y_index:0,x_coord:Pcs.pc.cards[Pcs.lastCard()].x_coord+250,y_coord:0,x_dim:250,y_dim:350,x_overlap:!1,y_overlap:!1,locked:!0,level:level};Pcs.pc.cards.push(newTrait)},service}]);var pcsModule=angular.module("pcs");pcsModule.factory("Pcs",["$stateParams","$location","Authentication","$resource",function($stateParams,$location,Authentication,$resource){var Pcs=$resource("pcs/:pcId",{pcId:"@_id"},{update:{method:"PUT"}}),service={};return service.pc={},service.cardByIndex=function(x_index,y_index){for(var i=0;i<this.pc.cards.length;i++)if(this.pc.cards[i].x_index===x_index&&this.pc.cards[i].y_index===y_index)return i},service.firstCard=function(){return this.cardByIndex(0,0)},service.lastCard=function(){for(var _last=0,_card={},i=0;i<this.pc.cards.length;i++)this.pc.cards[i].x_index>(_card.x_index||0)&&(_last=i,_card=this.pc.cards[i]);return _last},service.deckWidth=function(){return this.pc.cards?this.pc.cards[this.lastCard()].x_coord+275:1e3},service.lowestCard=function(x_index){for(var _lowest=0,_card={},i=0;i<this.pc.cards.length;i++)this.pc.cards[i].x_index===x_index&&this.pc.cards[i].y_index>(_card.y_index||-1)&&(_lowest=i,_card=this.pc.cards[i]);return _lowest},service.pcList=[],service.pcNew=!1,service.pcSaved=!1,service.browsePcs=function(){this.pcList=Pcs.query(function(){})},service.readPc=function(){this.pc=Pcs.get({pcId:$stateParams.pcId})},service.editPc=function(){var pc=this.pc;pc.$update(function(){},function(errorResponse){this.error=errorResponse.data.message})},service.addPc=function(){this.pc=new Pcs({abilities:[{name:"Strength",order:0,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Physique",order:1,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Flexibility",order:2,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Dexterity",order:3,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Acuity",order:4,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Intelligence",order:5,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Wisdom",order:6,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Charisma",order:7,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}}],dicepool:[{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0},{name:"d4",image:"modules/core/img/d_04.png",sides:"4",order:1},{name:"d6",image:"modules/core/img/d_06.png",sides:"6",order:2},{name:"d6",image:"modules/core/img/d_06.png",sides:"6",order:3},{name:"d8",image:"modules/core/img/d_08.png",sides:"8",order:4},{name:"d8",image:"modules/core/img/d_08.png",sides:"8",order:5},{name:"d10",image:"modules/core/img/d_10.png",sides:"10",order:6},{name:"d10",image:"modules/core/img/d_10.png",sides:"10",order:7},{name:"d12",image:"modules/core/img/d_12.png",sides:"12",order:8}],cards:[{cardType:"pc1",x_index:0,y_index:0,x_coord:0,y_coord:0,x_dim:250,y_dim:350,x_overlap:!1,y_overlap:!1,locked:!0},{cardType:"pc2",x_index:1,y_index:0,x_coord:250,y_coord:0,x_dim:250,y_dim:350,x_overlap:!1,y_overlap:!1,locked:!0},{cardType:"pc3",x_index:2,y_index:0,x_coord:500,y_coord:0,x_dim:250,y_dim:350,x_overlap:!1,y_overlap:!1,locked:!0},{name:"Level 0 Trait",cardType:"trait",x_index:3,y_index:0,x_coord:750,y_coord:0,x_dim:250,y_dim:350,x_overlap:!1,y_overlap:!1,locked:!0,level:0}]}),this.pc.$save(function(response){$location.path("pcs/"+response._id+"/edit")},function(errorResponse){this.error=errorResponse.data.message})},service.deletePc=function(pc){if(pc){pc.$remove();for(var i in this.pcs)this.pcs[i]===pc&&this.pcs.splice(i,1)}else this.pc.$remove(function(){$location.path("pcs")});this.browsePcs()},service}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);