"use strict";var ApplicationConfiguration=function(){var applicationModuleName="fsrpg",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","btford.socket-io"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("campaigns"),ApplicationConfiguration.registerModule("cards"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("decks"),ApplicationConfiguration.registerModule("npcs"),ApplicationConfiguration.registerModule("pcs"),ApplicationConfiguration.registerModule("users"),angular.module("campaigns").controller("CampaignsController",["$scope","Socket",function($scope,Socket){$scope.messages=[],$scope.users=[];var init=function(){$scope.name=window.user.username,$scope.messages.push({user:"",text:$scope.name+" has joined."}),Socket.emit("user:init",{name:window.user.username})};Socket.on("user:init",function(data){console.log(data);for(var message in data.messages)$scope.messages.push(message);for(var user in data.users)$scope.users.push(user)}),Socket.on("send:message",function(message){$scope.messages.push(message)}),Socket.on("user:join",function(data){$scope.messages.push({user:"",text:data.name+" has joined."}),$scope.users.push(data.name)}),Socket.on("user:left",function(data){$scope.messages.push({user:"chatroom",text:data.name+" has left."})}),$scope.messages=[],$scope.sendMessage=function(){$scope.message&&(Socket.emit("send:message",{user:$scope.name,text:$scope.message}),$scope.messages.push({user:$scope.name,text:$scope.message}),$scope.message="")},init()}]),angular.module("campaigns").factory("Campaigns",["$stateParams","$location","Authentication","$resource",function($stateParams,$location,Authentication,$resource){var Campaigns=$resource("campaigns/:campaignId",{campaignId:"@_id"},{update:{method:"PUT"}}),service={};return service.campaign={},service.campaignList=[],service.browseCampaigns=function(){this.campaignList=Campaigns.query(function(response){})},service.readCampaign=function(){this.campaign=Campaigns.get({campaignId:$stateParams.campaignId})},service.editCampaign=function(){var campaign=this.campaign;campaign.$update(function(){},function(errorResponse){this.error=errorResponse.data.message})},service.addCampaign=function(){this.campaign=new Campaigns({}),this.campaign.$save(function(response){$location.path("campaign/campaigns/"+response._id+"/edit")},function(errorResponse){this.error=errorResponse.data.message})},service.deleteCampaign=function(campaign){if(campaign){campaign.$remove();for(var i in this.campaigns)this.campaigns[i]===campaign&&this.campaigns.splice(i,1)}else this.campaign.$remove(function(){$location.path("campaign/campaigns")});this.browseCampaigns()},service}]),angular.module("cards").directive("cardForm",["$rootScope",function($rootScope){return{restrict:"A",require:"^form",link:function(scope,element,attr){scope.$on("Bakery: deckSaved",function(){scope.featureCardForm.$setPristine()})}}}]).directive("cardLogo",["$rootScope",function($rootScope){return{restrict:"A",templateUrl:"../modules/cards/views/card-logo.html"}}]).directive("cardHeader",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-header.html"}}).directive("cardDescription",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-description.html"}}).directive("cardModifiers",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-modifiers.html"}}).directive("cardBenefit",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-benefit.html"}}).directive("cardFooter",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-footer.html"}}).directive("cardAction",["DataSRVC",function(DataSRVC){return{restrict:"A",templateUrl:"../modules/cards/views/card-action.html",scope:{cardAction:"=",panel:"="},link:function(scope,element,attrs){scope.dataSRVC=DataSRVC}}}]).directive("cardActionIcon",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-icon.html"}}).directive("cardActionTitle",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-title.html"}}).directive("cardActionKeywords",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-keywords.html"}}).directive("cardActionPrompt",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-prompt.html"}}).directive("cardActionEffect",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-effect.html"}}).directive("cardActionAttack",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-attack.html"}}).directive("cardActionDefense",function(){return{restrict:"A",templateUrl:"../modules/cards/views/card-action-defense.html"}}).directive("originStats",function(){return{restrict:"A",templateUrl:"../modules/cards/views/origin-stats.html"}}).directive("originDefenses",function(){return{restrict:"A",templateUrl:"../modules/cards/views/origin-defenses.html"}}).directive("diceDropdown",function(){return{restrict:"A",templateUrl:"../modules/pcs/views/dice-dropdown.html",scope:{ability:"="}}}).directive("stopEvent",function(){return{restrict:"A",link:function(scope,element,attrs){var _pressEvents="touchstart mousedown";element.on(_pressEvents,function(event){scope.panel.x_overlap||scope.panel.y_overlap||event.stopPropagation()})}}}).directive("stopClick",function(){return{restrict:"A",link:function(scope,element,attrs){element.on("click",function(event){event.stopPropagation()})}}}).directive("elasticTextarea",["$timeout",function($timeout){return{restrict:"A",link:function(scope,element,attrs){var resizeArea=function(){setTimeout(function(){element[0].style.height=element[0].scrollHeight+"px"},25)};scope.$watch(function(){return element[0].scrollHeight},function(newValue,oldValue){newValue!==oldValue&&resizeArea()}),resizeArea()}}}]).directive("fitContent",function(){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var reduceText=function(){setTimeout(function(){for(var fontSize=parseInt(element.css("font-size"));element[0].offsetHeight>element.parent()[0].offsetHeight&&fontSize>=6;)fontSize--,element.css("font-size",fontSize+"px")},25)};scope.$watch(function(){return element[0].offsetHeight},function(newValue,oldValue){newValue>oldValue&&reduceText()}),reduceText()}}}),angular.module("cards").directive("playerOptions",function(){return{restrict:"A",templateUrl:"../modules/core/views/options-player.html"}}).directive("pcSummary",function(){return{restrict:"A",templateUrl:"../modules/pcs/views/pc-summary.html"}}).directive("pcOptions",function(){return{restrict:"A",templateUrl:"../modules/pcs/views/pc-options.html"}}).directive("cardPc1",function(){return{restrict:"A",templateUrl:"../modules/pcs/views/card-pc-1.html"}}).directive("cardPc2",function(){return{restrict:"A",templateUrl:"../modules/pcs/views/card-pc-2.html"}}).directive("cardPc3",function(){return{restrict:"A",templateUrl:"../modules/pcs/views/card-pc-3.html"}}).directive("featureCard",["DataSRVC","Bakery","Architect",function(DataSRVC,Bakery,Architect){return{restrict:"A",templateUrl:"../modules/cards/views/feature-card.html",scope:{card:"=",panel:"="},link:function(scope,element,attrs){scope.Bakery=Bakery,scope.dataSRVC=DataSRVC,scope.Architect=Architect}}}]).directive("narratorOptions",function(){return{restrict:"A",templateUrl:"../modules/core/views/options-narrator.html"}}).directive("npcSummary",function(){return{restrict:"A",templateUrl:"../modules/npcs/views/npc-summary.html"}}).directive("npcOptions",function(){return{restrict:"A",templateUrl:"../modules/npcs/views/npc-options.html"}}).directive("npcOrigin",function(){return{restrict:"A",templateUrl:"../modules/npcs/views/npc-origin.html"}}).directive("architectOptions",function(){return{restrict:"A",templateUrl:"../modules/core/views/options-architect.html"}}).directive("deckSummary",function(){return{restrict:"A",templateUrl:"../modules/decks/views/deck-summary.html"}}).directive("deckOptions",function(){return{restrict:"A",templateUrl:"../modules/decks/views/deck-options.html"}}).directive("campaignSummary",function(){return{restrict:"A",templateUrl:"../modules/campaigns/views/campaign-summary.html"}}).directive("campaignOptions",function(){return{restrict:"A",templateUrl:"../modules/campaigns/views/campaign-options.html"}}),angular.module("cards").factory("Aspects",["$resource",function($resource){return $resource("aspect/:aspectId",{aspectId:"@_id"},{update:{method:"PUT"},list:{url:"/aspects",method:"GET",isArray:!0},query:{url:"/aspects/:deckId",method:"GET",isArray:!0,params:{deckId:"@_id"}}})}]),angular.module("cards").factory("Augments",["$resource",function($resource){return $resource("augments/:augmentId",{augmentId:"@_id"},{update:{method:"PUT"}})}]),angular.module("cards").factory("CardsBread",["$stateParams","$location","Authentication","$resource","$rootScope","Bakery","CoreStack","CorePanel",function($stateParams,$location,Authentication,$resource,$rootScope,Bakery,CoreStack,CorePanel){var service={},editDeck=function(deck,_loadDeck){var _deck=new Bakery.Decks(deck);_deck.$update(function(response){_loadDeck&&(Bakery.resource=response)},function(errorResponse){console.log(errorResponse)})};return service.browse=function(cardType,params,destination){var cardParams=CorePanel.getCardParams(params);Bakery.getCardResource(cardType).query(cardParams,function(response){return response})},service.read=function(panel,callback){var params=CorePanel.getCardParams(panel);Bakery.getCardResource(panel.panelType).get(params,function(response){callback(panel,response)})},service.edit=function(panel){var cardResource=Bakery.getNewCardResource(panel);if("Aspect"!==panel.panelType){var panelData=CorePanel.getPanelData(panel);panelData.aspect&&(cardResource.aspect=panelData.aspect._id)}cardResource.$update()},service.add=function(deck,cardType,cardNumber,deckShift,deckSave){var card={deck:deck._id,deckSize:deck.deckSize,deckName:deck.name,cardNumber:cardNumber,cardType:cardType},panel={panelType:cardType,x_coord:15*cardNumber,y_coord:0};CorePanel.setPanelData(panel,card);var cardResource=Bakery.getNewCardResource(panel);cardResource.$save(function(response){CorePanel.setPanelData(panel,response),deck.cardList.push(panel),Bakery.setDeckSize(Bakery.resource)}).then(function(response){deckShift&&CorePanel.expandDeck(panel,Bakery.resource.cardList)}).then(function(response){deckSave&&editDeck(deck,!0)})},service["delete"]=function(panel,deck){if("architectOptions"!==panel.panelType){var cardResource=Bakery.getNewCardResource(panel);cardResource.$remove(function(response){deck&&CorePanel.removePanel(deck.cardList,panel)}).then(function(response){deck&&CorePanel.setDeckSize(deck)}).then(function(response){deck&&CorePanel.collapseDeck(panel,deck.cardList)}).then(function(response){deck&&editDeck(deck,!1)})}},service}]),angular.module("cards").factory("Feats",["$resource",function($resource){return $resource("feats/:featId",{featId:"@_id"},{update:{method:"PUT"}})}]),angular.module("cards").factory("Items",["$resource",function($resource){return $resource("items/:itemId",{itemId:"@_id"},{update:{method:"PUT"}})}]),angular.module("cards").factory("Origins",["$resource",function($resource){return $resource("origins/:originId",{originId:"@_id"},{update:{method:"PUT"}})}]),angular.module("cards").factory("Traits",["$resource",function($resource){return $resource("traits/:traitId",{traitId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("CoreController",["$location","$scope","$rootScope","$window","Authentication","Bakery","CardsBread","DecksBread","PcsBread","DataSRVC","PcsCard1","PcsCard2","PcsCard3","PcsTraits","PcsFeats","PcsAugments","PcsItems","Architect","Player","CoreVars",function($location,$scope,$rootScope,$window,Authentication,Bakery,CardsBread,DecksBread,PcsBread,DataSRVC,PcsCard1,PcsCard2,PcsCard3,PcsTraits,PcsFeats,PcsAugments,PcsItems,Architect,Player,CoreVars){$scope.authentication=Authentication,$scope.Bakery=Bakery,$scope.dataSRVC=DataSRVC,$scope.pcsCard1=PcsCard1,$scope.pcsCard2=PcsCard2,$scope.pcsCard3=PcsCard3,$scope.pcsTraits=PcsTraits,$scope.pcsFeats=PcsFeats,$scope.pcsAugments=PcsAugments,$scope.pcsItems=PcsItems,$scope.Architect=Architect,$scope.CoreVars=CoreVars;var pcNew=!1,initialize=function(){toggleListeners(!0)},toggleListeners=function(enable){enable&&($scope.$on("$destroy",onDestroy),$scope.$on("screenSize:onHeightChange",onHeightChange),$scope.$on("ability:onPress",Player.chooseAbility),$scope.$on("PcsCard1:updateAbility",Player.updateAbility),$scope.$watch("CoreVars.EXP",Player.watchEXP),$scope.$watch("Bakery.resource.experience",Player.watchExperience),$scope.$watch("Bakery.resource.level",Player.watchLevel))},onDestroy=function(){toggleListeners(!1)},onHeightChange=function(event,object){$scope.windowHeight=object.newHeight,$scope.$digest()};$scope.browsePcs=function(){PcsBread.browse()},$scope.browseDecks=function(param){DecksBread.browse(param)},$scope.readCard=function(card){CardsBread.read(card,CardsBread.setPanelData)},$scope.readDeck=function(deck){DecksBread.read(deck)},$scope.readPc=function(pc){PcsBread.read(pc),pcNew=!1},$scope.addCard=function(deck,cardType,cardNumber,deckShift,deckSave){CardsBread.add(deck,cardType,cardNumber,deckShift,deckSave)},$scope.addDeck=function(type,size){DecksBread.add(type,size)},$scope.addPc=function(){PcsBread.add(),pcNew=!0},$scope.editCard=function(card){CardsBread.edit(card)},$scope.editDeck=function(deck){DecksBread.edit(deck)},$scope.editPc=function(pc){PcsBread.edit(pc),pcNew=!1},$scope.deleteCard=function(panel){CardsBread["delete"](panel,Bakery.resource)},$scope.deleteDeck=function(deck){DecksBread["delete"](deck,Bakery.resource)},$scope.deletePc=function(pc){PcsBread["delete"](pc,Bakery.resource)},$scope.exitPc=function(pc){pcNew&&PcsBread["delete"](pc,Bakery.resource),$scope.browsePcs()},$scope.changeFeatureCard=function(card){$scope.modalShown=!0,$scope.modalDeckShown=!0,PcsTraits.browseCards()},$scope.status={isopen:!1},$scope.toggled=function(open){$scope.status.isopen=open,$rootScope.$broadcast("CardsCtrl:onDropdown",{isOpen:$scope.status.isopen})},initialize()}]),angular.module("core").controller("HeaderController",["$document","$rootScope","$scope","Authentication","Menus","CardsBread","DecksBread","PcsBread",function($document,$rootScope,$scope,Authentication,Menus,CardsBread,DecksBread,PcsBread){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.browseDecks=function(param){DecksBread.browse(param),$scope.isCollapsed=!1},$scope.browseCampaigns=function(){console.log("stub")},$scope.browsePcs=function(){PcsBread.browse(),$scope.isCollapsed=!1},$scope.browseNpcs=function(){console.log("stub")}}]),angular.module("core").directive("corePanel",["$document","$parse","$rootScope","$window","Bakery","CoreMove",function($document,$parse,$rootScope,$window,Bakery,CoreMove){return{restrict:"A",templateUrl:"../modules/core/views/core-panel.html",link:function(scope,element,attrs){Array.min=function(array){return Math.min.apply(Math,array)};var _startX,_startY,_mouseX,_mouseY,_moveX,_moveY,_panelX,_panelY,_startCol,_mouseCol,_startRow,_mouseRow,_moveTimer,_x_dim,_y_dim,_x_tab,_y_tab,_x_cover,_y_cover,_dropdownOpen=!1,_panel=$parse(attrs.panel)||null,_hasTouch="ontouchstart"in window,_pressEvents="touchstart mousedown",_moveEvents="touchmove mousemove",_releaseEvents="touchend mouseup",_pressTimer=null,initialize=function(){element.attr("draggable","false"),toggleListeners(!0),$document.ready(function(){onHeightChange()})},toggleListeners=function(enable){enable&&(scope.$on("$destroy",onDestroy),scope.$watch(attrs.panel,onCardChange),scope.$on("screenSize:onHeightChange",onHeightChange),scope.$on("corePanel:onPressCard",onPressCard),scope.$on("corePanel:onMoveCard",onMoveCard),scope.$on("corePanel:onReleaseCard",onReleaseCard),scope.$on("coreStack:onMouseLeave",onMouseLeave),scope.$on("CardsCtrl:onDropdown",onDropdown),scope.$watch("panel.x_coord",resetPosition),scope.$watch("panel.y_coord",resetPosition),element.on(_pressEvents,onPress),_hasTouch||"img"!==element[0].nodeName.toLowerCase()||element.on("mousedown",function(){return!1}))},onDestroy=function(enable){toggleListeners(!1)},onCardChange=function(newVal,oldVal){_panel=newVal,element.css({top:"0",left:"-21em"}),setTimeout(function(){setPosition()},0)},onDropdown=function(event,object){_dropdownOpen=object.isOpen},getElementFontSize=function(){return parseFloat($window.getComputedStyle(element[0],null).getPropertyValue("font-size"))},convertEm=function(value){return value*getElementFontSize()},onHeightChange=function(event,object){_x_dim=convertEm(15),_y_dim=convertEm(21),_x_tab=convertEm(3),_y_tab=convertEm(3),_x_cover=convertEm(12),_y_cover=convertEm(18),setPosition()},resetPosition=function(newVal,oldVal){element.hasClass("card-moving")&&setPosition()},setPosition=function(){element.css({top:_panel.y_coord+"em",left:_panel.x_coord+"em"})},onPress=function(event){_dropdownOpen?$document.triggerHandler("click"):_hasTouch?(cancelPress(),_pressTimer=setTimeout(function(){cancelPress(),onLongPress(event)},100),$document.on(_moveEvents,cancelPress),$document.on(_releaseEvents,cancelPress)):_hasTouch||onLongPress(event)},cancelPress=function(){clearTimeout(_pressTimer),$document.off(_moveEvents,cancelPress),$document.off(_releaseEvents,cancelPress)},onLongPress=function(event){_startX=event.pageX||event.touches[0].pageX,_startY=event.pageY||event.touches[0].pageY,_moveX=0,_moveY=0,$document.on(_moveEvents,onMove),$document.on(_releaseEvents,onRelease),element.removeClass("card-moving"),$rootScope.$broadcast("corePanel:onPressCard",{startX:_startX,startY:_startY,panel:_panel})},onPressCard=function(event,object){_startCol=convertEm(_panel.x_coord),_startRow=convertEm(_panel.y_coord);var panel=object.panel,panel_x=panel.x_coord,panel_y=panel.y_coord,panel_y_overlap=panel.y_overlap,slot=_panel,slot_x=slot.x_coord,slot_y=slot.y_coord;(slot_y!==panel_y||slot_x!==panel_x)&&(slot_x!==panel_x?element.addClass("card-moving"):slot_x!==panel_x&&slot_y>panel_y&&panel_y_overlap?element.addClass("card-moving"):slot_x!==panel_x||panel_y_overlap||element.addClass("card-moving"))},onMove=function(event){event.preventDefault(),_mouseX=event.pageX||event.touches[0].pageX,_mouseY=event.pageY||event.touches[0].pageY,_mouseCol=convertEm(_panel.x_coord),_mouseRow=convertEm(_panel.y_coord),_moveX=_mouseX-_startX,_moveY=_mouseY-_startY,_panelX=_moveX+_startCol-(_startCol-_mouseCol),_panelY=_moveY+_startRow-(_startRow-_mouseRow),element.css({left:_moveX+_startCol+"px",top:_moveY+_startRow+"px"}),$rootScope.$broadcast("corePanel:onMoveCard",{mouseX:_mouseX,mouseY:_mouseY,moveX:_moveX,moveY:_moveY,panelX:_panelX,panelY:_panelY,panel:_panel})},onMoveCard=function(event,object){var mouseX=object.mouseX,mouseY=object.mouseY,moveX=object.moveX,moveY=object.moveY,vectorX=Math.abs(object.moveX),vectorY=Math.abs(object.moveY),panel=object.panel,panel_x=panel.x_coord,panel_y=panel.y_coord,panel_x_overlap=panel.x_overlap,panel_y_overlap=panel.y_overlap,slot=_panel,slot_x=slot.x_coord,slot_y=slot.y_coord,slot_x_overlap=slot.x_overlap,slot_y_overlap=slot.y_overlap,changeX=Math.abs(panel_x-slot_x),changeY=Math.abs(panel_y-slot_y);0===changeX&&slot_y>panel_y&&panel_y_overlap?element.hasClass("card-moving")||element.css({left:_startCol+moveX+"px",top:_startRow+moveY+"px"}):(changeX>0||changeY>0)&&("top"===crossingEdge(mouseX,mouseY)?vectorX>0&&!slot_y_overlap&&!slot_x_overlap&&!panel_x_overlap?(console.log("corePanel:moveDiagonalUp"),CoreMove.moveDiagonalUp(slot,panel)):0!==changeX||panel_y_overlap?(console.log("corePanel:moveHorizontal"),CoreMove.moveHorizontal(slot,panel)):(console.log("corePanel:moveVertical"),CoreMove.moveVertical(slot,panel)):"bottom"===crossingEdge(mouseX,mouseY)?changeX>0&&_x_dim>=changeX?(console.log("corePanel:moveDiagonalDown"),CoreMove.moveDiagonalDown(slot,panel)):0!==changeX||panel_y_overlap?(console.log("corePanel:moveHorizontal"),CoreMove.moveHorizontal(slot,panel)):(console.log("corePanel:moveVertical"),CoreMove.moveVertical(slot,panel)):("left"===crossingEdge(mouseX,mouseY)||"right"===crossingEdge(mouseX,mouseY))&&(2*vectorY>vectorX?0>moveY?(console.log("corePanel:moveDiagonalUp"),CoreMove.moveDiagonalUp(slot,panel)):moveY>0&&(console.log("corePanel:moveDiagonalDown"),CoreMove.moveDiagonalDown(slot,panel)):(console.log("corePanel:moveHorizontal"),CoreMove.moveHorizontal(slot,panel))))},onRelease=function(){$document.off(_moveEvents,onMove),$document.off(_releaseEvents,onRelease),$rootScope.$broadcast("corePanel:onReleaseCard",{panel:_panel}),_moveX<=convertEm(1)&&_moveX>=-convertEm(1)&&_moveY<=convertEm(1)&&_moveY>=-convertEm(1)&&CoreMove.triggerOverlap(_panel)},onReleaseCard=function(event,object){element.addClass("card-moving"),setTimeout(function(){setPosition()},0),clearTimeout(_moveTimer),_moveTimer=setTimeout(function(){element.removeClass("card-moving")},600)},onMouseLeave=function(){$document.off(_moveEvents,onMove),$document.off(_releaseEvents,onRelease),$rootScope.$broadcast("corePanel:onReleaseCard",{panel:_panel})},crossingEdge=function(mouseX,mouseY){var cardOffset=element.offset(),slotX=cardOffset.left,slotY=cardOffset.top,leftEdge=_panel.x_overlap?slotX+_x_cover:slotX,rightEdge=slotX+_x_dim,topEdge=slotY,bottomEdge=_panel.y_overlap?slotY+_y_tab:slotY+_y_dim;if(mouseX>=leftEdge&&rightEdge>=mouseX&&mouseY>=topEdge&&bottomEdge>=mouseY){var left=mouseX-leftEdge,right=rightEdge-mouseX,top=mouseY-topEdge,bottom=bottomEdge-mouseY,edges=[left,right,top,bottom],closestEdge=Math.min.apply(Math.min,edges),edgeNames=["left","right","top","bottom"],edgeName=edgeNames[edges.indexOf(closestEdge)];return edgeName}};initialize()}}}]),angular.module("core").directive("coreStack",["$rootScope","$window","Bakery","CoreStack","CoreMove",function($rootScope,$window,Bakery,CoreStack,CoreMove){return{restrict:"A",link:function(scope,element,attrs){var pressed=!1,initialize=function(){toggleListeners(!0)},toggleListeners=function(enable){enable&&(scope.$on("$destroy",onDestroy),element.on("mouseleave",onMouseLeave),scope.$on("screenSize:onHeightChange",onHeightChange),scope.$on("CoreStack:setDeckWidth",setDeckWidth),scope.$on("corePanel:onPressCard",onPress),scope.$on("corePanel:onReleaseCard",onRelease),scope.$on("corePanel:onMoveCard",onMoveCard))},onDestroy=function(enable){toggleListeners(!1)},onHeightChange=function(event,object){var windowHeight=object.newHeight-50;element.css({height:windowHeight+"px"})},setDeckWidth=function(){var deckWidth=CoreStack.getDeckWidth(Bakery.resource.cardList);element.css({width:deckWidth+"em"})},getElementFontSize=function(){return parseFloat($window.getComputedStyle(element[0],null).getPropertyValue("font-size"))},convertEm=function(value){return value*getElementFontSize()},onPress=function(){pressed=!0},onRelease=function(){pressed=!1},onMoveCard=function(event,object){var deckOffset=element.offset(),deckWidth=CoreStack.getDeckWidth(Bakery.resource.cardList),deckLeftEdge=deckOffset.left,deckRightEdge=convertEm(deckWidth+3);object.mouseX<=deckLeftEdge?CoreMove.unstackLeft(object.panel):object.mouseX>=deckRightEdge&&CoreMove.unstackRight(object.panel)},onMouseLeave=function(event){pressed&&$rootScope.$broadcast("coreStack:onMouseLeave")};initialize()}}}]),angular.module("core").directive("modalDialogWindow",function(){return{restrict:"E",scope:{show:"="},transclude:!0,templateUrl:"../modules/core/views/modal-window.html",link:function(scope,element,attrs){scope.dialogStyle={},attrs.width&&(scope.dialogStyle.width=attrs.width),attrs.height&&(scope.dialogStyle.height=attrs.height),scope.hideModal=function(){scope.show=!1}}}});var coreModule=angular.module("core");coreModule.directive("screenSize",["$rootScope","$window",function($rootScope,$window){return{restrict:"A",link:function(scope,element,attrs){var _windowHeight,_window=angular.element($window),initialize=function(){toggleListeners(!0),setTimeout(function(){onHeightChange()},0)},toggleListeners=function(enable){enable&&(scope.$on("$destroy",onDestroy),_window.on("resize",onHeightChange))},onDestroy=function(enable){toggleListeners(!1)},onHeightChange=function(){_windowHeight=_window.height(),$rootScope.$broadcast("screenSize:onHeightChange",{newHeight:_windowHeight})};angular.element(document).ready(function(){initialize()}),initialize()}}}]),angular.module("core").factory("Architect",["$rootScope","Bakery","DecksBread",function($rootScope,Bakery,DecksBread){var service={};return service.toggleCardLock=function(panel,cardList){for(var i=0;i<cardList.length;i++)panel===cardList[i]&&(cardList[i].locked=!cardList[i].locked)},service.findDependency=function(deck,resource){for(var index=-1,i=0;i<resource.dependencies.length;i++){var dependency=resource.dependencies[i];dependency._id===deck._id&&(index=i)}return index},service.toggleDependency=function(deck,resource){var deckIndex=service.findDependency(deck,resource);deckIndex>-1?resource.dependencies.splice(deckIndex,1):resource.dependencies.push(deck);for(var i=0;i<resource.dependencies.length;i++)DecksBread.browseAspects(resource.dependencies[i])},service.changeAspect=function(card,aspect){console.log(card),console.log(aspect),card.aspect!==aspect&&(card.aspect=aspect)},service}]),angular.module("core").factory("Bakery",["$stateParams","$location","Authentication","$resource","$rootScope","Decks","CoreStack","CorePanel","Pcs","Aspects","Traits","Feats","Augments","Items","Origins",function($stateParams,$location,Authentication,$resource,$rootScope,Decks,CoreStack,CorePanel,Pcs,Aspects,Traits,Feats,Augments,Items,Origins){var service={};return service.Decks=Decks,service.Pcs=Pcs,service.Aspects=Aspects,service.Traits=Traits,service.Feats=Feats,service.Augments=Augments,service.Items=Items,service.Origins=Origins,service.resource={cardList:[]},service.getCardResource=function(cardType){switch(cardType){case"Aspect":return service.Aspects;case"Trait":return service.Traits;case"Feat":return service.Feats;case"Augment":return service.Augments;case"Item":return service.Items;case"Origin":return service.Origins;default:return!1}},service.getNewCardResource=function(panel){switch(panel.panelType){case"Aspect":return new service.Aspects(panel.aspectData);case"Trait":return new service.Traits(panel.traitData);case"Feat":return new service.Feats(panel.featData);case"Augment":return new service.Augments(panel.augmentData);case"Item":return new service.Items(panel.itemData);case"Origin":return new service.Origins(panel.originData);default:return!1}},service}]),angular.module("core").factory("CoreMove",["$rootScope","CoreVars","Bakery","CorePanel","CoreStack","switchHorizontal","switchVertical","stackOver","stackUnder","unstackCard","toggleOverlap",function($rootScope,CoreVars,Bakery,CorePanel,CoreStack,switchHorizontal,switchVertical,stackOver,stackUnder,unstackCard,toggleOverlap){var service={};service.windowHeight=0;var getCardList=function(){return Bakery.resource.cardList},initialize=function(){toggleListeners(!0)},toggleListeners=function(enable){enable&&($rootScope.$on("screenSize:onHeightChange",onHeightChange),$rootScope.$on("corePanel:onPressCard",onPressCard),$rootScope.$on("corePanel:onReleaseCard",onReleaseCard))},onHeightChange=function(event,object){service.windowHeight=object.newHeight},onPressCard=function(event,object){var _deck=getCardList(),panel=object.panel,panel_x=panel.x_coord,panel_y=panel.y_coord,panel_index=CorePanel.getPanel(_deck,panel_x,panel_y).index;if(CoreVars.cardMoved=!1,_deck[panel_index].y_overlap)for(var ia=0;ia<_deck.length;ia++)_deck[ia].x_coord===panel_x&&_deck[ia].y_coord>=panel_y&&(_deck[ia].dragging=!0);else _deck[panel_index].dragging=!0},onReleaseCard=function(event,object){var _deck=getCardList();CoreVars.cardMoved=!1;for(var ia=0;ia<_deck.length;ia++)_deck[ia].dragging=!1};return service.triggerOverlap=function(panel){if(!CoreVars.cardMoved){var _deck=getCardList();toggleOverlap(_deck,panel)}},service.moveHorizontal=function(slot,panel){{var _deck=getCardList();CoreStack.getLowestPanel(_deck,panel.x_coord).index}panel.y_coord>0||0===panel.y_coord&&panel.stacked&&!panel.y_overlap?(console.log("unstackCard"),unstackCard(_deck,slot,panel)):0===panel.y_coord&&(console.log("switchHorizontal"),switchHorizontal(_deck,slot,panel))},service.moveDiagonalUp=function(slot,panel){{var _deck=getCardList();CoreStack.getLowestPanel(_deck,panel.x_coord).index}0===panel.y_coord?stackUnder(_deck,slot,panel):unstackCard(_deck,slot,panel)},service.moveDiagonalDown=function(slot,panel){{var _deck=getCardList();CoreStack.getLowestPanel(_deck,panel.x_coord).index}0===panel.y_coord?stackOver(_deck,slot,panel):unstackCard(_deck,slot,panel)},service.moveVertical=function(slot,panel){var _deck=getCardList();switchVertical(_deck,slot,panel)},service.unstackLeft=function(panel){if(panel.y_coord>0){var _deck=getCardList(),unstack_coord=CorePanel.getPanel(_deck,0,0).panel.x_coord-CoreVars.x_dim;unstackCard(_deck,{x_coord:unstack_coord},panel)}},service.unstackRight=function(panel){if(panel.y_coord>0){var _deck=getCardList(),_last=CoreStack.getLastPanel(_deck),unstack_coord=_last.panel.x_coord+CoreVars.x_dim;unstackCard(_deck,{x_coord:unstack_coord},panel)}},initialize(),service}]),angular.module("core").factory("CorePanel",["$rootScope","$resource",function($rootScope,$resource){var service={};return service.getPanel=function(cardList,x_coord,y_coord){if(cardList.length>0)for(var i=0;i<cardList.length;i++)if(cardList[i].x_coord===x_coord&&cardList[i].y_coord===y_coord)return{index:i,panel:cardList[i]}},service.removePanel=function(panel,cardList){for(var i=0;i<cardList.length;i++)cardList[i]===panel&&cardList.splice(i,1)},service.getPanelData=function(panel){switch(panel.panelType){case"Aspect":return panel.aspectData;case"Trait":return panel.traitData;case"Feat":return panel.featData;case"Augment":return panel.augmentData;case"Item":return panel.itemData;case"Origin":return panel.originData;default:return!1}},service.setPanelData=function(panel,cardData){switch(panel.panelType){case"Aspect":panel.aspectData=cardData;break;case"Trait":panel.traitData=cardData;break;case"Feat":panel.featData=cardData;break;case"Augment":panel.augmentData=cardData;break;case"Item":panel.itemData=cardData;break;case"Origin":panel.originData=cardData;break;default:return!1}},service.getCardParams=function(panel){var cardId;switch(panel.panelType){case"Aspect":return cardId=panel.aspectData._id,{aspectId:panel.aspectData._id};case"Trait":return cardId=panel.traitData._id,{traitId:panel.traitData._id};case"Feat":return cardId=panel.featData._id,{featId:panel.featData._id};case"Augment":return cardId=panel.augmentData._id,{augmentId:panel.augmentData._id
};case"Item":return cardId=panel.itemData._id,{itemId:panel.itemData._id};case"Origin":return cardId=panel.originData._id,{originId:panel.originData._id};default:return!1}},service.expandDeck=function(panel,cardList){for(var panel_x_coord=panel.x_coord,i=(panel.y_coord,0);i<cardList.length;i++){var slot=cardList[i],slotData=service.getPanelData(slot);slot!==panel&&slot.x_coord>=panel_x_coord&&(slot.x_coord+=15,slotData.cardNumber++)}$rootScope.$broadcast("corePanel:onReleaseCard")},service.collapseDeck=function(panel,cardList){for(var panel_x_coord=panel.x_coord,i=(panel.y_coord,0);i<cardList.length;i++){var slot=cardList[i],slotData=service.getPanelData(slot);slot.x_coord>panel_x_coord&&(slot.x_coord-=15,slotData.cardNumber--)}$rootScope.$broadcast("corePanel:onReleaseCard")},service.setDeckSize=function(resource){var _length=resource.cardList.length-1;resource.deckSize=_length;for(var i=0;i<resource.cardList.length;i++){var panel=resource.cardList[i],panelData=service.getPanelData(panel);panelData.deckSize=_length}},service}]),angular.module("core").factory("CoreStack",["$rootScope",function($rootScope){var service={};return service.getLastPanel=function(cardList){var _index=0,_panel={x_coord:0};if(cardList.length>0)for(var i=0;i<cardList.length;i++)cardList[i].x_coord>(_panel.x_coord||-1)&&(_index=i,_panel=cardList[i]);return{index:_index,panel:_panel}},service.getLowestPanel=function(cardList,x_coord){var _index=0,_panel={y_coord:0};if(cardList.length>0)for(var i=0;i<cardList.length;i++)cardList[i].x_coord===x_coord&&cardList[i].y_coord>(_panel.y_coord||-1)&&(_index=i,_panel=cardList[i]);return{index:_index,panel:_panel}},service.getDeckWidth=function(cardList){var lastPanel=service.getLastPanel(cardList);return lastPanel.panel.x_coord+15},service.setDeckWidth=function(cardList){var _deckWidth=service.getDeckWidth(cardList);$rootScope.$broadcast("CoreStack:setDeckWidth",{deckWidth:_deckWidth})},service.setCardList=function(cardList){for(var i=0;i<cardList.length;i++)cardList[i].x_coord=15*i,cardList[i].y_coord=0,cardList[i].x_overlap=!1,cardList[i].y_overlap=!1,cardList[i].dragging=!1,cardList[i].stacked=!1,cardList[i].locked=!1;$rootScope.$broadcast("corePanel:onReleaseCard")},service.getColumnArray=function(cardList,x_coord){for(var _column=[],i=0;i<cardList.length;i++)cardList[i].x_coord===x_coord&&_column.push(i);return _column},service.setColumnVars=function(cardList,x_coord){var _lowest=service.getLowestPanel(cardList,x_coord);if(_lowest.panel.y_coord>0){var _column=service.getColumnArray(cardList,x_coord);_column.sort(function(a,b){return cardList[a].y_coord-cardList[b].y_coord});for(var i=0;i<_column.length;i++)if(cardList[_column[i]].stacked=!0,_column[i]===_lowest.index)cardList[_column[i]].y_overlap=!1;else{var _panel=cardList[_column[i]],_next=cardList[_column[i+1]];_next.y_coord-_panel.y_coord===3?_panel.y_overlap=!0:_next.y_coord-_panel.y_coord===21&&(_panel.y_overlap=!1)}}else cardList[_lowest.index].stacked=!1,cardList[_lowest.index].y_overlap=!1},service}]),angular.module("core").factory("CoreVars",["$rootScope","Bakery","CorePanel","CoreStack",function($rootScope,Bakery,CorePanel,CoreStack){var service={};service.experience=0,service.x_dim=15,service.y_dim=21,service.x_tab=3,service.y_tab=3,service.x_cover=12,service.y_cover=18,service.cardMoved=!1,service.cardMoving=!1;var moveTimer,moveSpeed=800;return service.modalShown=!1,service.diceBoxShown=!1,service.modalDeckShown=!1,service.setCardMoving=function(){clearTimeout(moveTimer),service.cardMoving=!0,service.cardMoved=!0,moveTimer=setTimeout(function(){service.cardMoving=!1,CoreStack.setDeckWidth(Bakery.resource.cardList)},moveSpeed)},service.hideModal=function(){service.modalShown=!1,service.diceBoxShown=!1,service.modalDeckShown=!1},service}]),angular.module("core").factory("DataSRVC",[function($rootScope){var service={};return service.sexArray=["---","Male","Female"],service.diceList=[{order:1,name:"d__",sides:0,image:"modules/core/img/d___.png"},{order:2,name:"d4",sides:4,image:"modules/core/img/d_04.png"},{order:3,name:"d6",sides:6,image:"modules/core/img/d_06.png"},{order:4,name:"d6",sides:6,image:"modules/core/img/d_06.png"},{order:5,name:"d8",sides:8,image:"modules/core/img/d_08.png"},{order:6,name:"d8",sides:8,image:"modules/core/img/d_08.png"},{order:7,name:"d10",sides:10,image:"modules/core/img/d_10.png"},{order:8,name:"d10",sides:10,image:"modules/core/img/d_10.png"},{order:9,name:"d12",sides:12,image:"modules/core/img/d_12.png"}],service.aspectTypes=["Archetype","Allegiance","Race"],service.targetTypes=["Utility","Close","Close Area","Distant","Distant Area"],service.closeDetails=["1/1","1/2","1/3","1/4","2/1","2/2","2/3","2/4","3/1","3/2","3/3","3/4","4/1","4/2","4/3"],service.closeAreaDetails=["2x2","3x3","4x4","5x5"],service.distantDetails=["4/1","6/1","8/1","10/1","12/1","14/1","16/1","18/1","20/1","22/1","24/1"],service.distantAreaDetails=["8/2x2","10/2x2","12/2x2","16/2x2","10/3x3","12/3x3","16/3x3","20/3x3","12/4x4","16/4x4","20/4x4"],service.actionKeywords=["Default","Single-use","Thrown","Reflexive","Melee","Ranged","Evocation","Invocation"],service.actionFrequency=["Free","Count: 1","Count: 2","Count: 3","Count: 4","Count: 5","Disruptive","Responsive"],service.dice=["1d4","1d6","1d8","1d10","1d12"],service.abilities=["STR","PHY","FLE","DEX","ACU","INT","WIS","CHA"],service.attackTypes=["Melee","Ranged","Evocation","Invocation"],service.defenseTypes=["Block","Dodge","Alertness","Tenacity"],service.prerequisites=["1d10 STR","1d10 PHY","1d10 FLE","1d10 DEX","1d10 ACU","1d10 INT","1d10 WIS","1d10 CHA"],service.itemTypes=["Melee","Melee / Ranged","Melee / Invocation","Ranged","Ranged / Melee","Ranged / Evocation","Evocation","Evocation / Invocation","Evocation / Ranged","Invocation","Invocation / Evocation","Invocation / Melee"],service.itemSlots=["One-handed","Two-handed","One-handed or Paired","One-handed or Two-handed","Armor","Shield","Gloves","Boots","Cloak","Amulet","Ring","Belt","Helmet","Consumable","Provision"],service}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("mockDataBuilder",function(){var service={};return service.newMockData=function(){var mockData={};return mockData.aspect_1={panelType:"Aspect",aspectData:{name:"Aspect the First",cardType:"Aspect",cardNumber:1}},mockData.aspect_2={panelType:"Aspect",aspectData:{name:"Aspect the Second",cardType:"Aspect",cardNumber:2}},mockData.aspect_3={panelType:"Aspect",aspectData:{name:"Aspect the Third",cardType:"Aspect",cardNumber:3}},mockData.aspect_4={panelType:"Aspect",aspectData:{name:"Aspect the Fourth",cardType:"Aspect",cardNumber:4}},mockData.aspect_5={panelType:"Aspect",aspectData:{name:"Aspect the Fifth",cardType:"Aspect",cardNumber:5}},mockData.aspect_6={panelType:"Aspect",aspectData:{name:"Aspect the Sixth",cardType:"Aspect",cardNumber:6}},mockData.aspect_7={panelType:"Aspect",aspectData:{name:"Aspect the Seventh",cardType:"Aspect",cardNumber:7}},mockData.aspect_8={panelType:"Aspect",aspectData:{name:"Aspect the Eighth",cardType:"Aspect",cardNumber:8}},mockData.aspectDeck={_id:"aspectDeck_id",dependencies:[],cardList:[mockData.aspect_1,mockData.aspect_2,mockData.aspect_3,mockData.aspect_4,mockData.aspect_5,mockData.aspect_6,mockData.aspect_7,mockData.aspect_8]},mockData.trait_1={panelType:"Trait",traitData:{name:"Trait the First",cardType:"Trait",cardNumber:1}},mockData.trait_2={panelType:"Trait",traitData:{name:"Trait the Second",cardType:"Trait",cardNumber:2}},mockData.trait_3={panelType:"Trait",traitData:{name:"Trait the Third",cardType:"Trait",cardNumber:3}},mockData.trait_4={panelType:"Trait",traitData:{name:"Trait the Fourth",cardType:"Trait",cardNumber:4}},mockData.traitDeck={_id:"traitDeck_id",dependencies:[{_id:"aspectDeck_id"}],cardList:[mockData.trait_1,mockData.trait_2,mockData.trait_3,mockData.trait_4]},mockData.feat_1={panelType:"Feat",x_coord:0,y_coord:0,featData:{name:"Feat the First",cardType:"Feat",cardNumber:1}},mockData.feat_2={panelType:"Feat",x_coord:15,y_coord:0,featData:{name:"Feat the Second",cardType:"Feat",cardNumber:2}},mockData.feat_3={panelType:"Feat",x_coord:15,y_coord:21,featData:{name:"Feat the Third",cardType:"Feat",cardNumber:3}},mockData.feat_4={panelType:"Feat",x_coord:30,y_coord:21,featData:{name:"Feat the Fourth",cardType:"Feat",cardNumber:4}},mockData.feat_5={panelType:"Feat",x_coord:30,y_coord:0,featData:{name:"Feat the Fifth",cardType:"Feat",cardNumber:5}},mockData.feat_6={panelType:"Feat",x_coord:30,y_coord:42,featData:{name:"Feat the Sixth",cardType:"Feat",cardNumber:6}},mockData.feat_7={panelType:"Feat",x_coord:45,y_coord:0,featData:{name:"Feat the Seventh",cardType:"Feat",cardNumber:7}},mockData.feat_8={panelType:"Feat",x_coord:45,y_coord:3,featData:{name:"Feat the Eighth",cardType:"Feat",cardNumber:8}},mockData.feat_9={panelType:"Feat",x_coord:45,y_coord:24,featData:{name:"Feat the Ninth",cardType:"Feat",cardNumber:9}},mockData.feat_10={panelType:"Feat",x_coord:45,y_coord:27,featData:{name:"Feat the Tenth",cardType:"Feat",cardNumber:10}},mockData.featDeck={_id:"featDeck_id",dependencies:[],cardList:[mockData.feat_1,mockData.feat_2,mockData.feat_3,mockData.feat_4,mockData.feat_5,mockData.feat_6,mockData.feat_7,mockData.feat_8,mockData.feat_9,mockData.feat_10]},mockData},service}),angular.module("core").factory("Player",["$rootScope","CoreVars","Bakery","PcsCard1","PcsCard2","PcsTraits","PcsFeats","PcsAugments",function($rootScope,CoreVars,Bakery,PcsCard1,PcsCard2,PcsTraits,PcsFeats,PcsAugments){var service={};return service.updateAbility=function(event,object){console.log("updateAbility"),console.log(object);var abilityPair=object.abilityPair,ability1=object.ability1,ability2=object.ability2;switch(abilityPair){case 1:PcsCard1.factorBlock(ability1,ability2),PcsCard2.factorHealth(),PcsCard2.factorStamina(),PcsCard2.factorCarryingCapacity();break;case 2:PcsCard1.factorDodge(ability1,ability2);break;case 3:PcsCard1.factorAlertness(ability1,ability2);break;case 4:PcsCard1.factorTenacity(ability1,ability2)}},service.chooseAbility=function(event,object){CoreVars.modalShown=!0,CoreVars.diceBoxShown=!0},service.watchEXP=function(newValue,oldValue){"pc"===Bakery.resource.deckType&&newValue!==oldValue&&(CoreVars.EXP=parseInt(newValue),Bakery.resource.experience=parseInt(newValue))},service.watchExperience=function(newValue,oldValue){"pc"===Bakery.resource.deckType&&newValue!==oldValue&&(PcsCard2.factorExperience(),newValue!==PcsCard2.EXP&&(CoreVars.EXP=newValue))},service.watchLevel=function(newValue,oldValue){"pc"===Bakery.resource.deckType&&(PcsCard2.factorHealth(),PcsCard2.factorStamina(),PcsTraits.factorTraitLimit(),PcsFeats.factorFeatLimit(),PcsAugments.factorAugmentLimit())},service}]),angular.module("core").factory("Socket",["socketFactory",function(socketFactory){var mSocket=socketFactory({ioSocket:socket});return mSocket}]),angular.module("core").factory("stackOver",["$rootScope","CoreVars","Bakery","CorePanel","CoreStack",function($rootScope,CoreVars,Bakery,CorePanel,CoreStack){return function(cardList,slot,panel){if(!CoreVars.cardMoving&&!slot.x_overlap&&!panel.x_overlap){var slot_x=slot.x_coord,slot_y=slot.y_coord,slot_x_overlap=(CorePanel.getPanel(cardList,slot_x,slot_y).index,slot.x_overlap),panel_x=(slot.y_overlap,panel.x_coord),panel_y=panel.y_coord,panel_x_overlap=(CorePanel.getPanel(cardList,panel_x,panel_y).index,panel.x_overlap),panel_lowest_index=(panel.y_overlap,CoreStack.getLowestPanel(cardList,panel_x).index),panel_lowest_coord=cardList[panel_lowest_index].y_coord,newColumn=panel_x>slot_x?slot_x:slot_x-CoreVars.x_dim;if(!slot_x_overlap&&!panel_x_overlap){CoreVars.setCardMoving();for(var ia=0;ia<cardList.length;ia++)!cardList[ia].dragging&&cardList[ia].x_coord===newColumn&&cardList[ia].y_coord>slot_y&&(cardList[ia].y_coord+=panel_lowest_coord+CoreVars.y_tab),cardList[ia].dragging&&(cardList[ia].x_coord=slot_x,cardList[ia].y_coord+=slot_y+CoreVars.y_tab-panel_y),cardList[ia].x_coord>panel_x&&0===panel_y&&(cardList[ia].x_coord-=CoreVars.x_dim);CoreStack.setColumnVars(cardList,newColumn),CoreStack.setColumnVars(cardList,slot_x),CoreStack.setColumnVars(cardList,panel_x)}$rootScope.$digest()}}}]),angular.module("core").factory("stackUnder",["$rootScope","CoreVars","Bakery","CorePanel","CoreStack",function($rootScope,CoreVars,Bakery,CorePanel,CoreStack){return function(cardList,slot,panel){if(!CoreVars.cardMoving&&!slot.x_overlap&&!panel.x_overlap){var panel_x=panel.x_coord,panel_y=panel.y_coord,panel_lowest_coord=(CorePanel.getPanel(cardList,panel_x,panel_y).index,panel.x_overlap,panel.y_overlap,CoreStack.getLowestPanel(cardList,panel_x).panel.y_coord),slot_x=slot.x_coord,slot_y=slot.y_coord,newColumn=(CorePanel.getPanel(cardList,slot_x,slot_y).index,CoreStack.getLowestPanel(cardList,slot_x).panel.y_coord,panel_x>slot_x?slot_x:slot_x-CoreVars.x_dim);CoreVars.setCardMoving();for(var ia=0;ia<cardList.length;ia++)cardList[ia].dragging||cardList[ia].x_coord!==slot_x||(cardList[ia].y_coord+=panel_lowest_coord+CoreVars.y_tab),cardList[ia].x_coord>panel_x&&(cardList[ia].x_coord-=CoreVars.x_dim),cardList[ia].dragging&&(cardList[ia].x_coord=newColumn);CoreStack.setColumnVars(cardList,newColumn),CoreStack.setColumnVars(cardList,slot_x),CoreStack.setColumnVars(cardList,panel_x),$rootScope.$digest()}}}]),angular.module("core").factory("switchHorizontal",["$rootScope","CoreVars","Bakery","CorePanel","CoreStack",function($rootScope,CoreVars,Bakery,CorePanel,CoreStack){return function(cardList,slot,panel){if(console.log("switchHorizontal"),!CoreVars.cardMoving){var slot_x=slot.x_coord,slot_y=slot.y_coord,slot_index=CorePanel.getPanel(cardList,slot_x,slot_y).index,slot_x_overlap=slot.x_overlap,slot_position=slot_x,panel_x=panel.x_coord,panel_y=panel.y_coord,panel_index=CorePanel.getPanel(cardList,panel_x,panel_y).index,panel_x_overlap=panel.x_overlap,panel_width=CoreVars.x_dim;if(panel_x-slot_x>0){CoreVars.setCardMoving(),0===slot_x&&panel_x_overlap?(slot_position=0,panel_width-=CoreVars.x_cover,cardList[slot_index].x_overlap=!0,cardList[panel_index].x_overlap=!1):(panel_x_overlap&&(panel_width-=CoreVars.x_cover,slot_position-=CoreVars.x_cover),slot_x_overlap&&(slot_position+=CoreVars.x_cover));for(var ia=0;ia<cardList.length;ia++)cardList[ia].x_coord>=slot_x&&cardList[ia].x_coord<panel_x?cardList[ia].x_coord+=panel_width:cardList[ia].x_coord===panel_x&&(cardList[ia].x_coord=slot_position)}else if(0>panel_x-slot_x){if(CoreVars.setCardMoving(),0===panel_x&&slot_x_overlap){var first_index=CorePanel.getPanel(cardList,0,0);cardList[first_index].x_overlap=!1,cardList[panel_index].x_overlap=!0,panel_width-=CoreVars.x_cover}else panel_x>0&&panel_x_overlap&&(panel_width-=CoreVars.x_cover);for(var ib=0;ib<cardList.length;ib++)cardList[ib].x_coord<=slot_x&&cardList[ib].x_coord>panel_x?cardList[ib].x_coord-=panel_width:cardList[ib].x_coord===panel_x&&(cardList[ib].x_coord=slot_position)}$rootScope.$digest()}}}]),angular.module("core").factory("switchVertical",["$rootScope","CoreVars","Bakery","CorePanel","CoreStack",function($rootScope,CoreVars,Bakery,CorePanel,CoreStack){return function(cardList,slot,panel){if(console.log("switchVertical"),!CoreVars.cardMoving){{var slot_x=slot.x_coord,slot_y=slot.y_coord,slot_index=CorePanel.getPanel(cardList,slot_x,slot_y).index,slot_y_overlap=slot.y_overlap,panel_x=panel.x_coord,panel_y=panel.y_coord,panel_index=CorePanel.getPanel(cardList,panel_x,panel_y).index,panel_y_overlap=panel.y_overlap,lowest_index=CoreStack.getLowestPanel(cardList,slot_x).index;cardList[lowest_index].y_coord}panel_y-slot_y>0?(CoreVars.setCardMoving(),cardList[slot_index].y_coord=panel_y,cardList[slot_index].y_overlap=panel_y_overlap,$rootScope.$digest(),cardList[panel_index].y_coord=slot_y,cardList[panel_index].y_overlap=slot_y_overlap):0>panel_y-slot_y&&(CoreVars.setCardMoving(),cardList[slot_index].y_coord=panel_y,cardList[slot_index].y_overlap=panel_y_overlap,$rootScope.$digest(),cardList[panel_index].y_coord=slot_y,cardList[panel_index].y_overlap=slot_y_overlap),$rootScope.$digest()}}}]),angular.module("core").factory("toggleOverlap",["$rootScope","CoreVars","Bakery","CorePanel","CoreStack",function($rootScope,CoreVars,Bakery,CorePanel,CoreStack){return function(cardList,panel){if(!CoreVars.cardMoved){var panel_x=panel.x_coord,panel_y=panel.y_coord,panel_x_overlap=panel.x_overlap,panel_y_overlap=panel.y_overlap,panel_index=CorePanel.getPanel(cardList,panel_x,panel_y).index,lowest_index=CoreStack.getLowestPanel(cardList,panel_x).index,lowest_y=cardList[lowest_index].y_coord;if(panel_x>0&&0===lowest_y){if(panel_x_overlap&&!CoreVars.cardMoving){CoreVars.setCardMoving(),cardList[panel_index].x_overlap=!1;for(var ia=0;ia<cardList.length;ia++)panel_x<=cardList[ia].x_coord&&(cardList[ia].x_coord+=CoreVars.x_cover)}else if(!panel_x_overlap&&!CoreVars.cardMoving){CoreVars.setCardMoving(),cardList[panel_index].x_overlap=!0;for(var ib=0;ib<cardList.length;ib++)panel_x<=cardList[ib].x_coord&&(cardList[ib].x_coord-=CoreVars.x_cover)}}else if(panel_y!==lowest_y)if(panel_y_overlap&&!CoreVars.cardMoving){CoreVars.setCardMoving(),cardList[panel_index].y_overlap=!1;for(var ic=0;ic<cardList.length;ic++)panel_x===cardList[ic].x_coord&&panel_y<cardList[ic].y_coord&&(cardList[ic].y_coord+=CoreVars.y_cover)}else if(!panel_y_overlap&&!CoreVars.cardMoving){CoreVars.setCardMoving(),cardList[panel_index].y_overlap=!0;for(var id=0;id<cardList.length;id++)panel_x===cardList[id].x_coord&&panel_y<cardList[id].y_coord&&(cardList[id].y_coord-=CoreVars.y_cover)}$rootScope.$digest(),CoreVars.cardMoved=!1}}}]),angular.module("core").factory("unstackCard",["$rootScope","CoreVars","Bakery","CorePanel","CoreStack",function($rootScope,CoreVars,Bakery,CorePanel,CoreStack){return function(cardList,slot,panel){if(!CoreVars.cardMoving){if(CoreStack.getLowestPanel(cardList,panel.x_coord).panel.y_coord>0){var new_slot_index,new_panel_index,panel_x=panel.x_coord,panel_y=panel.y_coord,panel_index=CorePanel.getPanel(cardList,panel_x,panel_y).index,panel_y_overlap=(panel.x_overlap,panel.y_overlap),slot_x=slot.x_coord;if(panel_x-slot_x>0){if(CoreVars.setCardMoving(),panel_y_overlap)for(var ia=0;ia<cardList.length;ia++)cardList[ia].x_coord>panel_x&&(cardList[ia].x_coord+=CoreVars.x_dim),cardList[ia].x_coord===panel_x&&panel_y_overlap&&(cardList[ia].y_coord<panel_y?cardList[ia].x_coord+=CoreVars.x_dim:cardList[ia].y_coord>=panel_y&&(cardList[ia].y_coord-=panel_y));else if(!panel_y_overlap){for(var ib=0;ib<cardList.length;ib++)cardList[ib].x_coord>=panel_x&&(cardList[ib].x_coord===panel_x&&cardList[ib].y_coord>panel_y&&(cardList[ib].y_coord-=CoreVars.y_dim),ib!==panel_index&&(cardList[ib].x_coord+=CoreVars.x_dim));cardList[panel_index].y_coord=0,cardList[panel_index].stacked=!1}new_slot_index=CoreStack.getLowestPanel(cardList,panel_x).index,new_panel_index=CoreStack.getLowestPanel(cardList,panel_x+CoreVars.x_dim).index,cardList[new_slot_index].y_overlap=!1,0===cardList[new_slot_index].y_coord&&(cardList[new_slot_index].stacked=!1),cardList[new_panel_index].y_overlap=!1,0===cardList[new_panel_index].y_coord&&(cardList[new_panel_index].stacked=!1)}else if(0>panel_x-slot_x&&!CoreVars.cardMoving){if(CoreVars.setCardMoving(),panel_y_overlap)for(var ic=0;ic<cardList.length;ic++)cardList[ic].x_coord>panel_x&&(cardList[ic].x_coord+=CoreVars.x_dim),cardList[ic].x_coord===panel_x&&cardList[ic].y_coord>=panel_y&&(cardList[ic].x_coord+=CoreVars.x_dim,cardList[ic].y_coord-=panel_y);else if(!panel_y_overlap){for(var id=0;id<cardList.length;id++)cardList[id].x_coord>panel_x&&(cardList[id].x_coord+=CoreVars.x_dim),cardList[id].x_coord===panel_x&&cardList[id].y_coord>panel_y&&(cardList[id].y_coord-=CoreVars.y_dim);cardList[panel_index].x_coord+=CoreVars.x_dim,cardList[panel_index].y_coord=0}new_slot_index=CoreStack.getLowestPanel(cardList,panel_x).index,new_panel_index=CoreStack.getLowestPanel(cardList,slot_x).index,cardList[new_slot_index].y_overlap=!1,0===cardList[new_slot_index].y_coord&&(cardList[new_slot_index].stacked=!1),cardList[new_panel_index].y_overlap=!1,0===cardList[new_panel_index].y_coord&&(cardList[new_panel_index].stacked=!1)}}$rootScope.$digest()}}}]),angular.module("decks").factory("DecksBread",["$stateParams","$location","Authentication","$resource","$rootScope","Bakery","CoreStack","CorePanel","CardsBread",function($stateParams,$location,Authentication,$resource,$rootScope,Bakery,CoreStack,CorePanel,CardsBread){var service={};return service.browseAspects=function(deck){Bakery.resource.archetypeList=[],Bakery.resource.allegianceList=[],Bakery.resource.raceList=[],Bakery.Aspects.query({deckId:deck._id},function(response){for(var i=0;i<response.length;i++)"Archetype"===response[i].aspectType?Bakery.resource.archetypeList.push(response[i]):"Allegiance"===response[i].aspectType?Bakery.resource.allegianceList.push(response[i]):"Race"===response[i].aspectType&&Bakery.resource.raceList.push(response[i])})},service.browseDependencies=function(){Bakery.Decks.query({deckType:"Aspect"},function(response){Bakery.dependencyDecks=response})},service.browse=function(param){Bakery.resource={},param?Bakery.Decks.query(param,function(response){response.unshift({panelType:"architectOptions"}),Bakery.resource.cardList=response,CoreStack.setCardList(Bakery.resource.cardList)}):Bakery.Decks.list(function(response){response.unshift({panelType:"architectOptions"}),Bakery.resource.cardList=response,CoreStack.setCardList(Bakery.resource.cardList)})},service.read=function(deck){Bakery.Decks.get({deckId:deck._id},function(response){if(Bakery.resource=response,"Aspect"!==response.deckType){service.browseDependencies();for(var i=0;i<response.dependencies.length;i++)service.browseAspects(response.dependencies[i])}})},service.edit=function(deck,_editCards,_loadDeck){var _deck=new Bakery.Decks(deck);_deck.$update(function(response){if(_editCards){for(var i=0;i<deck.cardList.length;i++){var panel=deck.cardList[i];CardsBread.edit(panel)}$rootScope.$broadcast("Bakery: deckSaved")}_loadDeck&&(service.resource=response)},function(errorResponse){console.log(errorResponse)})},service.add=function(type,size){var deck=new Bakery.Decks({name:type+" Deck",deckType:type,deckSize:size,cardList:[{panelType:"deckOptions",x_coord:0,y_coord:0}]});deck.$save(function(response){for(var i=0;size>i;i++)CardsBread.add(deck,type,i+1,!1,i+1===size);"Aspect"!==type&&service.browseDependencies()})},service["delete"]=function(deck,resource){deck.$remove(function(response){CorePanel.removePanel(deck,resource.cardList),CorePanel.setDeckSize(resource),CorePanel.collapseDeck(deck,resource.cardList)})},service}]),angular.module("decks").factory("Decks",["$resource",function($resource){return $resource("deck/:deckId",{deckId:"@_id"},{update:{method:"PUT"},list:{url:"/decks",method:"GET",isArray:!0},query:{url:"/decks/:deckType",method:"GET",isArray:!0,params:{deckType:"deckType"}}})}]),angular.module("npcs").controller("NpcsController",["$scope","$stateParams","$location","Authentication","Npcs",function($scope,$stateParams,$location,Authentication,Npcs){$scope.authentication=Authentication,$scope.create=function(){var npc=new Npcs({name:this.name});npc.$save(function(response){$location.path("npcs/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(npc){if(npc){npc.$remove();for(var i in $scope.npcs)$scope.npcs[i]===npc&&$scope.npcs.splice(i,1)}else $scope.npc.$remove(function(){})},$scope.update=function(){var npc=$scope.npc;npc.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.npcs=Npcs.query(function(response){console.log(response)})},$scope.findOne=function(){$scope.npc=Npcs.get({npcId:$stateParams.npcId})}}]),angular.module("npcs").factory("Npcs",["$resource",function($resource){return $resource("npcs/:npcId",{npcId:"@_id"},{update:{method:"PUT"}})}]),angular.module("pcs").directive("ability",["$parse","$rootScope","$window","PcsCard1",function($parse,$rootScope,$window,PcsCard1){return{restrict:"A",link:function(scope,element,attrs){var _ability=$parse(attrs.ability)||null,_pressEvents="touchstart mousedown",initialize=function(){element.attr("draggable","false"),toggleListeners(!0),onHeightChange()},toggleListeners=function(enable){enable&&(scope.$on("$destroy",onDestroy),scope.$watch(attrs.ability,onAbilityChange),scope.$on("screenSize:onHeightChange",onHeightChange),element.on(_pressEvents,onPress))},onDestroy=function(enable){toggleListeners(!1)},getElementFontSize=function(){return parseFloat($window.getComputedStyle(element[0],null).getPropertyValue("font-size"))},convertEm=function(value){return value*getElementFontSize()},onAbilityChange=function(newVal,oldVal){_ability=newVal},getPosition=function(){var offset=element.offset(),caret=_ability.order<4?"top-caret":"bottom-caret",topEdge=_ability.order<4?offset.top+convertEm(3):offset.top-convertEm(9),leftEdge=offset.left-convertEm(.5);return{caret:caret,topEdge:topEdge,leftEdge:leftEdge,ability:_ability}},onHeightChange=function(event,object){_ability.order===PcsCard1.chosenAbility.order&&$rootScope.$broadcast("ability:setPosition",getPosition())},onPress=function(){$rootScope.$broadcast("ability:onPress",getPosition())};initialize()}}}]),angular.module("pcs").directive("diceBox",["$window",function($window){return{restrict:"A",templateUrl:"../modules/pcs/views/dice-box.html",link:function(scope,element,attrs){var initialize=function(){element.attr("draggable","false"),toggleListeners(!0)},toggleListeners=function(enable){enable&&(scope.$on("$destroy",onDestroy),scope.$on("ability:onPress",setPosition),scope.$on("ability:setPosition",setPosition))},onDestroy=function(enable){toggleListeners(!1)},setPosition=function(event,object){var _caret=object.caret,_topEdge=object.topEdge,_leftEdge=object.leftEdge;element.removeClass("top-caret"),element.removeClass("bottom-caret"),element.addClass(_caret),element.css({top:_topEdge+"px",left:_leftEdge+"px"})};initialize()}}}]),angular.module("pcs").directive("modalDeck",["$window",function($window){return{restrict:"A",templateUrl:"../modules/pcs/views/modal-deck.html",link:function(scope,element,attrs){}}}]),angular.module("pcs").factory("PcsAugments",["Bakery","CoreStack",function(Bakery,CoreStack){var service={};return service.factorAugmentLimit=function(){Bakery.resource.augmentLimit=Math.round((Bakery.resource.level||0)/4),this.validateAugments()},service.validateAugments=function(){for(var ia=0;ia<Bakery.resource.augmentLimit;ia++)this.augmentAtLevel(4*ia+2)||this.addAugment(4*ia+2);for(var ic=0;ic<Bakery.resource.cardList.length;ic++)Bakery.resource.cardList[ic].level>Bakery.resource.level&&console.log("TODO: remove card")},service.augmentAtLevel=function(level){for(var augmentAtLevel=!1,ib=0;ib<Bakery.resource.cardList.length;ib++)"Augment"===Bakery.resource.cardList[ib].panelType&&Bakery.resource.cardList[ib].level===level&&(augmentAtLevel=!0);return augmentAtLevel},service.addAugment=function(level){var newAugment={panelType:"Augment",x_coord:CoreStack.getLastPanel(Bakery.resource.cardList).panel.x_coord+15,y_coord:0,x_overlap:!1,y_overlap:!1,dragging:!1,stacked:!1,locked:!0,level:level,augmentData:{name:"Level "+level+" Augment"}};Bakery.resource.cardList.push(newAugment)},service}]),angular.module("pcs").factory("PcsBread",["$stateParams","$location","Authentication","$resource","$rootScope","Bakery","CoreStack","CorePanel","pcsDefaults",function($stateParams,$location,Authentication,$resource,$rootScope,Bakery,CoreStack,CorePanel,pcsDefaults){var service={};return service.browse=function(){Bakery.resource={},Bakery.resource.cardList=[],Bakery.Pcs.query(function(response){response.unshift({panelType:"playerOptions"}),Bakery.resource.cardList=response,CoreStack.setCardList(Bakery.resource.cardList)})},service.read=function(pc){Bakery.resource=Bakery.Pcs.get({pcId:pc._id})},service.edit=function(pc){pc.$update(function(response){},function(errorResponse){this.error=errorResponse.data.message})},service.add=function(){var pc=new Bakery.Pcs(pcsDefaults);pc.$save(function(response){Bakery.resource=response})},service["delete"]=function(pc,resource){pc.$remove(function(response){CorePanel.removePanel(pc,resource.cardList),CorePanel.setDeckSize(resource),CorePanel.collapseDeck(pc,resource.cardList)})},service}]),angular.module("pcs").factory("PcsCard1",["$rootScope","Bakery","CoreVars",function($rootScope,Bakery,CoreVars){var service={};return service.chosenDie={},service.previousDie={},service.chosenAbility={},service.chooseAbility=function(ability){service.chosenAbility=Bakery.resource.abilities[ability]},$rootScope.$on("ability:onPress",function(event,object){console.log(object),service.chosenAbility=Bakery.resource.abilities[object.ability.order]}),service.chooseDie=function(dice){CoreVars.modalShown=!1,CoreVars.diceBoxShown=!1;var _abilityPair,_ability1,_ability2;switch(this.chosenDie=Bakery.resource.dicepool[dice],this.previousDie=this.chosenAbility.dice,Bakery.resource.dicepool[dice]=Bakery.resource.dicepool[0],this.previousDie.order>0&&(Bakery.resource.dicepool[this.previousDie.order]=this.previousDie),Bakery.resource.abilities[this.chosenAbility.order].dice=this.chosenDie,this.chosenAbility.order){case 0:case 1:_abilityPair=1,_ability1=Bakery.resource.abilities[0],
_ability2=Bakery.resource.abilities[1];break;case 2:case 3:_abilityPair=2,_ability1=Bakery.resource.abilities[2],_ability2=Bakery.resource.abilities[3];break;case 4:case 5:_abilityPair=3,_ability1=Bakery.resource.abilities[4],_ability2=Bakery.resource.abilities[5];break;case 6:case 7:_abilityPair=4,_ability1=Bakery.resource.abilities[6],_ability2=Bakery.resource.abilities[7]}$rootScope.$broadcast("pcsCard1:updateAbility",{abilityPair:_abilityPair,ability1:_ability1,ability2:_ability2})},service.factorBlock=function(_str,_phy){Number(_str.dice.sides)>Number(_phy.dice.sides)?Bakery.resource.block="2"+_str.dice.name:Bakery.resource.block="2"+_phy.dice.name},service.factorDodge=function(_fle,_dex){Number(_fle.dice.sides)>Number(_dex.dice.sides)?Bakery.resource.dodge="2"+_fle.dice.name:Bakery.resource.dodge="2"+_dex.dice.name},service.factorAlertness=function(_acu,_int){Number(_acu.dice.sides)>Number(_int.dice.sides)?Bakery.resource.alertness="2"+_acu.dice.name:Bakery.resource.alertness="2"+_int.dice.name},service.factorTenacity=function(_wis,_cha){Number(_wis.dice.sides)>Number(_cha.dice.sides)?Bakery.resource.tenacity="2"+_wis.dice.name:Bakery.resource.tenacity="2"+_cha.dice.name},service}]),angular.module("pcs").factory("PcsCard2",["$rootScope","Bakery","PcsTraits",function($rootScope,Bakery,PcsTraits){var service={};return service.factorExperience=function(){for(var mLevel=0,mExperience=Number(Bakery.resource.experience),increment=8;mExperience>=increment;increment++)mLevel++,mExperience-=increment;Bakery.resource.level=mLevel},service.factorHealth=function(){Bakery.resource.healthLimit=Math.round((Number(Bakery.resource.abilities[0].dice.sides)+Number(Bakery.resource.abilities[1].dice.sides))*((Bakery.resource.level||0)/16+1)),Bakery.resource.healthCurrent=Number(Bakery.resource.healthLimit-Bakery.resource.injury)},service.factorStamina=function(){Bakery.resource.staminaLimit=Math.round((Number(Bakery.resource.abilities[0].dice.sides)+Number(Bakery.resource.abilities[1].dice.sides))*((Bakery.resource.level||0)/16+1)),Bakery.resource.staminaCurrent=Number(Bakery.resource.healthLimit-Bakery.resource.injury)},service.factorCarryingCapacity=function(){Bakery.resource.carryCurrent=0,Bakery.resource.carryLimit=Number(Bakery.resource.abilities[0].dice.sides)+Number(Bakery.resource.abilities[1].dice.sides)},service}]),angular.module("pcs").factory("PcsCard3",["$rootScope","Bakery",function($rootScope,Bakery){var service={};return service}]),angular.module("pcs").factory("pcsDefaults",[function(){var defaultStats={abilities:[{name:"Strength",order:0,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Physique",order:1,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Flexibility",order:2,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Dexterity",order:3,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Acuity",order:4,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Intelligence",order:5,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Wisdom",order:6,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}},{name:"Charisma",order:7,dice:{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0}}],dicepool:[{name:"d__",image:"modules/core/img/d___.png",sides:"0",order:0},{name:"d4",image:"modules/core/img/d_04.png",sides:"4",order:1},{name:"d6",image:"modules/core/img/d_06.png",sides:"6",order:2},{name:"d6",image:"modules/core/img/d_06.png",sides:"6",order:3},{name:"d8",image:"modules/core/img/d_08.png",sides:"8",order:4},{name:"d8",image:"modules/core/img/d_08.png",sides:"8",order:5},{name:"d10",image:"modules/core/img/d_10.png",sides:"10",order:6},{name:"d10",image:"modules/core/img/d_10.png",sides:"10",order:7},{name:"d12",image:"modules/core/img/d_12.png",sides:"12",order:8}],cardList:[{panelType:"pc1",x_coord:0,y_coord:0,x_overlap:!1,y_overlap:!1,dragging:!1,stacked:!1,locked:!0},{panelType:"pc2",x_coord:15,y_coord:0,x_overlap:!1,y_overlap:!1,dragging:!1,stacked:!1,locked:!0},{panelType:"pc3",x_coord:30,y_coord:0,x_overlap:!1,y_overlap:!1,dragging:!1,stacked:!1,locked:!0},{panelType:"Trait",x_coord:45,y_coord:0,x_overlap:!1,y_overlap:!1,dragging:!1,stacked:!1,locked:!0,level:0,traitData:{name:"Level 0 Trait"}}]};return defaultStats}]),angular.module("pcs").factory("PcsFeats",["Bakery","CoreStack",function(Bakery,CoreStack){var service={};return service.factorFeatLimit=function(){Bakery.resource.featLimit=Math.ceil(Bakery.resource.level/4)||0,Bakery.resource.featDeck=Bakery.resource.level,this.validateFeats()},service.validateFeats=function(){for(var ia=0;ia<Bakery.resource.featDeck;ia++)this.featAtLevel(ia+1)||this.addFeat(ia+1);for(var ic=0;ic<Bakery.resource.cardList.length;ic++)Bakery.resource.cardList[ic].level>Bakery.resource.level&&console.log("TODO: remove card")},service.featAtLevel=function(level){for(var featAtLevel=!1,ib=0;ib<Bakery.resource.cardList.length;ib++)"Feat"===Bakery.resource.cardList[ib].panelType&&Bakery.resource.cardList[ib].level===level&&(featAtLevel=!0);return featAtLevel},service.addFeat=function(level){var newFeat={panelType:"Feat",x_coord:CoreStack.getLastPanel(Bakery.resource.cardList).panel.x_coord+15,y_coord:0,x_overlap:!1,y_overlap:!1,dragging:!1,stacked:!1,locked:!0,level:level,featData:{name:"Level "+level+" Feat"}};Bakery.resource.cardList.push(newFeat)},service}]),angular.module("pcs").factory("PcsItems",["Bakery",function(Bakery){var service={};return service}]),angular.module("pcs").factory("PcsTraits",["Bakery","CoreStack",function(Bakery,CoreStack){var service={};return service.factorTraitLimit=function(){Bakery.resource.traitLimit=Math.floor((Bakery.resource.level||0)/4+1),this.validateTraits()},service.validateTraits=function(){for(var ia=0;ia<Bakery.resource.traitLimit;ia++)this.traitAtLevel(4*ia)||this.addTrait(4*ia);for(var ic=0;ic<Bakery.resource.cardList.length;ic++)Bakery.resource.cardList[ic].level>Bakery.resource.level&&console.log("TODO: remove card")},service.traitAtLevel=function(level){for(var traitAtLevel=!1,ib=0;ib<Bakery.resource.cardList.length;ib++)"Trait"===Bakery.resource.cardList[ib].panelType&&Bakery.resource.cardList[ib].level===level&&(traitAtLevel=!0);return traitAtLevel},service.addTrait=function(level){var newTrait={panelType:"Trait",x_coord:CoreStack.getLastPanel(Bakery.resource.cardList).panel.x_coord+15,y_coord:0,x_overlap:!1,y_overlap:!1,dragging:!1,stacked:!1,locked:!0,level:level,traitData:{name:"Level "+level+" Trait"}};Bakery.resource.cardList.push(newTrait)},service}]),angular.module("decks").factory("Pcs",["$resource",function($resource){return $resource("pcs/:pcId",{pcId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);